<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[大型系统的网站架构概览]]></title>
      <url>/architecture/architecture/architecture%20overview/</url>
      <content type="html"><![CDATA[<p>技术点</p>
<ul>
<li>单点登录</li>
<li>API gateway</li>
<li>文件存储系统</li>
<li>批量任务执行</li>
<li>日志搜索</li>
<li>分布式调用</li>
<li>前端</li>
<li>移动前端</li>
<li>移动端</li>
<li>小程序</li>
<li>微信公共平台</li>
<li>支付系统</li>
<li>部署</li>
<li>CI/CD</li>
<li>数据库集群和读写分离</li>
<li>CMS系统</li>
<li>数据备份</li>
</ul>
]]></content>
      
        <categories>
            
            <category> architecture </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[单点登录技术方案]]></title>
      <url>/architecture/architecture/SSO/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> architecture </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[实用的SQL语句技巧]]></title>
      <url>/mysql/mysql/Useful%20mysql%20statement/</url>
      <content type="html"><![CDATA[<p>使用SQL完成文本替换操作</p>
<blockquote>
<p>update typecho_contents set text=REPLACE (addr,’<a href="http://bcs.duapp.com/helpjs&#39;,&#39;http://helpjs.bj.bcebos.com/" target="_blank" rel="external">http://bcs.duapp.com/helpjs&#39;,&#39;http://helpjs.bj.bcebos.com/</a>‘)</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Team leader 能力模型案例解读]]></title>
      <url>/management/management/Team%20leader%20checklist/</url>
      <content type="html"><![CDATA[<ul>
<li>Develop others<ul>
<li>主动提出Feedbacks  </li>
</ul>
</li>
<li>Staffing<ul>
<li>熟悉团队成员构成，如果人员变化及时报告和安排人员</li>
<li>如果有新人或者毕业生，需要权衡是否会影响团队</li>
</ul>
</li>
<li>Team building<ul>
<li>增加亲密关系，让团队更加和谐、融洽</li>
<li>团队成员情绪和压力</li>
<li>Team的人员成长，注意人员搭配</li>
<li>提醒Timecard</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> management </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[H5 app开发经验]]></title>
      <url>/h5/h5/h5%20app/</url>
      <content type="html"><![CDATA[<p>安装打包后的IPA文件到手机：<a href="http://blog.csdn.net/Qyee16/article/details/68083242" target="_blank" rel="external">http://blog.csdn.net/Qyee16/article/details/68083242</a><br>申请APP证书：<a href="https://www.jianshu.com/p/665c1d67adde" target="_blank" rel="external">https://www.jianshu.com/p/665c1d67adde</a></p>
]]></content>
      
        <categories>
            
            <category> h5 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[H5 webapp技术选型]]></title>
      <url>/h5/h5/H5%20webapp%20tech%20stack/</url>
      <content type="html"><![CDATA[<h2 id="开发方案"><a href="#开发方案" class="headerlink" title="开发方案"></a>开发方案</h2><h3 id="React技术选型"><a href="#React技术选型" class="headerlink" title="React技术选型"></a>React技术选型</h3><ul>
<li>React</li>
<li>Redux </li>
<li>webpack</li>
</ul>
<p>参考案例</p>
<ul>
<li>cnode 客户端方案可以构建出web、mobile各种平台</li>
</ul>
<h3 id="VUE技术方案"><a href="#VUE技术方案" class="headerlink" title="VUE技术方案"></a>VUE技术方案</h3><ul>
<li>vuejs2.0</li>
<li>vue-router</li>
<li>vuex</li>
<li>mint-ui</li>
</ul>
<h3 id="Jquery技术方案"><a href="#Jquery技术方案" class="headerlink" title="Jquery技术方案"></a>Jquery技术方案</h3><ul>
<li>mui</li>
<li>zepto.js or jquery.js</li>
</ul>
<p>参考案例</p>
<ul>
<li>vue购物车 <a href="https://github.com/liu-zhuang/Vue-Demo" target="_blank" rel="external">https://github.com/liu-zhuang/Vue-Demo</a></li>
<li><a href="https://github.com/zoeminghong/shopping-cart-vue-project" target="_blank" rel="external">https://github.com/zoeminghong/shopping-cart-vue-project</a></li>
<li>音乐APP <a href="https://www.cnblogs.com/smartXiang/p/6055616.html" target="_blank" rel="external">https://www.cnblogs.com/smartXiang/p/6055616.html</a></li>
</ul>
<h2 id="打包方案"><a href="#打包方案" class="headerlink" title="打包方案"></a>打包方案</h2><p>使用cordova <a href="http://wiki.printf.cn/h5/h5/Build">http://wiki.printf.cn/h5/h5/Build</a> package with Apache Cordova</p>
]]></content>
      
        <categories>
            
            <category> h5 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[h5打包方案]]></title>
      <url>/h5/h5/Build%20package%20with%20Apache%20Cordova/</url>
      <content type="html"><![CDATA[<h2 id="为什么需要H5打包？"><a href="#为什么需要H5打包？" class="headerlink" title="为什么需要H5打包？"></a>为什么需要H5打包？</h2><p>通过H5可以开发跨平台的APP，比如安卓、IOS.</p>
<h2 id="使用Cordova打包"><a href="#使用Cordova打包" class="headerlink" title="使用Cordova打包"></a>使用Cordova打包</h2><p>使用npm安装</p>
<blockquote>
<p>npm install -g cordova</p>
</blockquote>
<p>创建一个项目</p>
<blockquote>
<p>cordova create hello com.example.hello HelloWorld</p>
</blockquote>
<p>在这个项目下有一个www的目录，该目录就是放置我们的webapp的位置</p>
<p>然后我们可以添加需要编译的平台</p>
<blockquote>
<p>cordova platform add ios<br>cordova platform add android</p>
</blockquote>
<p>查看添加的平台</p>
<blockquote>
<p>cordova platform ls</p>
</blockquote>
<p>构建所有平台</p>
<blockquote>
<p>cordova build</p>
</blockquote>
<p>构建指定平台</p>
<blockquote>
<p>cordova build ios</p>
</blockquote>
<h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><ul>
<li><a href="https://cordova.apache.org/docs/en/latest/guide/cli/" target="_blank" rel="external">https://cordova.apache.org/docs/en/latest/guide/cli/</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> h5 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[领域驱动设计]]></title>
      <url>/agile/agile/domain%20driven%20design/</url>
      <content type="html"><![CDATA[<h2 id="什么是领域驱动设计？"><a href="#什么是领域驱动设计？" class="headerlink" title="什么是领域驱动设计？"></a>什么是领域驱动设计？</h2><p>领域驱动设计是一种设计软件系统的方法。类似的方法有UML、ER图。</p>
<h2 id="资源推荐"><a href="#资源推荐" class="headerlink" title="资源推荐"></a>资源推荐</h2><ul>
<li>《》</li>
</ul>
]]></content>
      
        <categories>
            
            <category> agile </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[常用的GIT命令]]></title>
      <url>/devops/devops/Git%20commands/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> devops </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[敏捷开发 Way of working]]></title>
      <url>/agile/agile/Way%20of%20working/</url>
      <content type="html"><![CDATA[<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>敏捷开发流程中的一些很好的工作方式，本文中使用的敏捷方法为Scrum</p>
<h2 id="建卡"><a href="#建卡" class="headerlink" title="建卡"></a>建卡</h2><p>BA负责建story卡，如果其他人需要建立卡片，需要告知BA</p>
<h2 id="three-amigos"><a href="#three-amigos" class="headerlink" title="three amigos"></a>three amigos</h2><p>BA DEV QA 三方catchup，澄清卡的需求，然后BA移动到当前迭代</p>
<h2 id="estimation"><a href="#estimation" class="headerlink" title="estimation"></a>estimation</h2><p>BA发起全员来进行估算工作量，并澄清需求</p>
<p>估点数量按照斐波那契数列例如 1 2 3 5，超过5个点的卡需要被拆分</p>
<h2 id="ready-for-dev"><a href="#ready-for-dev" class="headerlink" title="ready for dev"></a>ready for dev</h2><p>BA把卡移动到ready for dev，然后开发就可以开始工作</p>
<h2 id="development"><a href="#development" class="headerlink" title="development"></a>development</h2><p>Dev需要和BA、QA领卡，kick off然后开始工作，每个卡需要建立一个branch，完成工作后需要检查pipeline是否通过然后，创建Pull request，然后该卡可以移动到review</p>
<h2 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h2><p>Review 环节需要找人approve PR</p>
<h2 id="Ready-for-test"><a href="#Ready-for-test" class="headerlink" title="Ready for test"></a>Ready for test</h2><p>合并代码到Master，和QA sign off后移动故事卡到Ready for test</p>
]]></content>
      
        <categories>
            
            <category> agile </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring boot 学习指南]]></title>
      <url>/Java/java/Spring%20boot%20Basic/</url>
      <content type="html"><![CDATA[<h2 id="什么是Spring-boot"><a href="#什么是Spring-boot" class="headerlink" title="什么是Spring boot"></a>什么是Spring boot</h2><p>Spring boot是一个基于Spring、Spring MVC的开发框架，特点是约定大于配置，使用Jar和内嵌容器的方式运行。</p>
<h2 id="一些资源"><a href="#一些资源" class="headerlink" title="一些资源"></a>一些资源</h2><ul>
<li>Spring boot原理：<a href="http://blog.csdn.net/liaokailin/article/category/5765237" target="_blank" rel="external">http://blog.csdn.net/liaokailin/article/category/5765237</a></li>
</ul>
<h2 id="Spring-boot原理的个人理解"><a href="#Spring-boot原理的个人理解" class="headerlink" title="Spring boot原理的个人理解"></a>Spring boot原理的个人理解</h2><ul>
<li>内嵌Tomcat，使用JAR包部署，和一般java应用一致，不再使用web容器的方式编写代码</li>
<li>在使用Spring boot中非常不解的一件事是为什么可以直接引入包就可以使用，因为Spring boot有自动化配置的方式，常用的配置被定义在在autoconfigure这个包下，可以使用@Config注解来覆盖</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[大型系统架构设计]]></title>
      <url>/architecture/architecture/large%20websites%20architecture/</url>
      <content type="html"><![CDATA[<h2 id="技术选型清单"><a href="#技术选型清单" class="headerlink" title="技术选型清单"></a>技术选型清单</h2><ul>
<li>Java</li>
<li>JWT</li>
<li>RabbitMQ</li>
<li>Redis</li>
<li>Linux </li>
<li>Ngnix</li>
<li>Mybatis </li>
<li>React</li>
<li>Swagger</li>
<li>Splunk </li>
<li>Pack testing </li>
<li>OAuth2/SSO</li>
<li>CDN </li>
<li>Mysql </li>
</ul>
<h2 id="分布式架构设计图"><a href="#分布式架构设计图" class="headerlink" title="分布式架构设计图"></a>分布式架构设计图</h2>]]></content>
      
        <categories>
            
            <category> architecture </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用SSH实现自动化部署]]></title>
      <url>/aws/devops/auto%20deployment%20with%20ssh/</url>
      <content type="html"><![CDATA[<h2 id="相关解决方案"><a href="#相关解决方案" class="headerlink" title="相关解决方案"></a>相关解决方案</h2><p>在web项目中有时候，需要部署代码上线，因此有一些问题在于怎么自动化部署。通常的做法是使用CI/CD平台配合自定义的脚本来实现。</p>
<ul>
<li>对于PHP可以使用git、SVN直接同步代码，配合Puppet使用</li>
<li>Java和前端等项目可以使用包管理来发布</li>
</ul>
<h2 id="小型SSH部署代码实现"><a href="#小型SSH部署代码实现" class="headerlink" title="小型SSH部署代码实现"></a>小型SSH部署代码实现</h2><p>对于小型团队和自己的项目贴一段用SSH实现的Spring boot部署方案</p>
<p>SCP jar文件到远程服务器</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">scp -i "./.circleci/aws.pem" whoisspy-0.0.1-SNAPSHOT.jar ubuntu@ec2-18-217-113-62.us-east-2.compute.amazonaws.com:/home/ubuntu/workspace/whoisspy-0.0.1-SNAPSHOT.jar</div></pre></td></tr></table></figure>
<p>kill原来的端口，然后启动新的进程</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh -i "./.circleci/aws.pem" ubuntu@ec2-18-217-113-62.us-east-2.compute.amazonaws.com 'ls</div><div class="line">            cd workspace</div><div class="line">            #kill old instance</div><div class="line">            output=$( netstat -apn | grep 8086 | grep LISTEN) &amp;&amp; read num1 num2 num3 num4 num5  &lt;&lt;&lt;$&#123;output//[^0-9]/ &#125; &amp;&amp; kill -9 $num5 || pwd</div><div class="line"></div><div class="line">            # todo start new instance</div><div class="line">            java -jar whoisspy-0.0.1-SNAPSHOT.jar &gt; /dev/null 2&gt;&amp;1 &amp;</div><div class="line"></div><div class="line">            # test if it has been started</div><div class="line">            netstat -apn | grep 8086'</div></pre></td></tr></table></figure>
<p>清理本地SSH链接</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">pid=$( ps aux | grep amazonaws | awk '&#123;print $2&#125;' | sort -n | head -n 1 )</div><div class="line">leep 5 &amp;&amp; kill $&#123;pid&#125; &amp;&amp; echo "ssh command is complete"</div></pre></td></tr></table></figure>
<p>关于怎么远程执行命令并合理退出，参考了文章：<a href="http://blog.csdn.net/fdipzone/article/details/23000201" target="_blank" rel="external">http://blog.csdn.net/fdipzone/article/details/23000201</a></p>
]]></content>
      
        <categories>
            
            <category> aws </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Java web工程师知识图谱]]></title>
      <url>/java/java/Java%20kills%20map/</url>
      <content type="html"><![CDATA[<ol>
<li><p>Java基础</p>
</li>
<li><p>Web开发基础知识</p>
<ul>
<li>浏览器工作原理</li>
<li>Servlet和JSP</li>
<li>HTTP协议</li>
<li>DNS解析原理</li>
<li>HTML、CSS、JS</li>
</ul>
</li>
<li><p>Java框架</p>
<ul>
<li>Spring、Spring MVC</li>
<li>Mybatis</li>
<li>Hibernate</li>
<li>Shiro\Spring security</li>
<li>Spring boot</li>
<li>JWT token认证方案</li>
</ul>
</li>
<li><p>常用library</p>
<ul>
<li>Google guava集合处理和常用工具</li>
<li>Apache commons api</li>
<li>Quartz计划任务处理</li>
<li>Jackson json处理</li>
<li>Selflog 日志生成</li>
<li>freemarker模板引擎</li>
<li>Apache httpcomponent HTTP client工具</li>
<li></li>
</ul>
</li>
<li><p>数据库</p>
<ul>
<li>Mysql</li>
<li>MongoDB</li>
<li>Redis</li>
</ul>
</li>
<li><p>架构设计</p>
<ul>
<li>OAuth</li>
<li>Restful API设计</li>
<li>SSO单点登录</li>
<li>分布式框架Dubbo</li>
<li>微服务框架Spring cloud</li>
</ul>
</li>
<li><p>工程化</p>
<ul>
<li>Gradle\Maven构建工具</li>
<li>Jenkins</li>
<li>Circleci PaaS平台的CI</li>
<li>Checkstyle代码质量检测</li>
<li>FindBugs代码检测</li>
<li>Swagger文档管理</li>
<li>Axway webgate网关方案</li>
</ul>
</li>
<li><p>测试</p>
<ul>
<li>Contract 测试Pact</li>
<li>Junit</li>
<li>Assertj断言库</li>
<li>mockito 单元测试Mock工具</li>
<li>WireMock数据拦截和模拟</li>
</ul>
</li>
<li><p>部署和监控</p>
<ul>
<li>Linux</li>
<li>Tomcat web服务器</li>
<li>Nginx负载均衡</li>
<li>Splunk日志管理</li>
<li>Dynatrace</li>
<li>ELK(ElasticSearch+Logstash+ Kibana)</li>
<li>Spring boot admin监控</li>
</ul>
</li>
<li><p>项目管理</p>
<ul>
<li>禅道管理平台</li>
<li>Trello看板管理</li>
<li>Confluence文档管理</li>
</ul>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[React学习体系]]></title>
      <url>/react/React%20crouse%20map/</url>
      <content type="html"><![CDATA[<h2 id="参考的几家课程体系："><a href="#参考的几家课程体系：" class="headerlink" title="参考的几家课程体系："></a>参考的几家课程体系：</h2><ul>
<li><a href="http://www.zhufengpeixun.cn/react/index.html" target="_blank" rel="external">http://www.zhufengpeixun.cn/react/index.html</a> </li>
<li><a href="http://www.jikexueyuan.com/course/reactjs/" target="_blank" rel="external">http://www.jikexueyuan.com/course/reactjs/</a></li>
<li><a href="https://roadtoreact.com/course-details?courseId=THE_ROAD_TO_LEARN_REACT" target="_blank" rel="external">https://roadtoreact.com/course-details?courseId=THE_ROAD_TO_LEARN_REACT</a></li>
</ul>
<h2 id="课程列表"><a href="#课程列表" class="headerlink" title="课程列表"></a>课程列表</h2><ol>
<li>环境搭建和ES基础<ul>
<li>前端开发历史沿革</li>
<li>开发环境</li>
<li>Gitflow工作流</li>
<li>ES6新特性介绍</li>
</ul>
</li>
<li>webpack工程化前端项目<ul>
<li>Webpack的使用</li>
<li>Babel使用</li>
<li>测试环境的准备</li>
<li>JS linter</li>
<li>Webpack各种Loader配置</li>
</ul>
</li>
<li>React基础<ul>
<li>React基本思想</li>
<li>JSX语法</li>
<li>组件生命周期</li>
<li>Children使用场景</li>
<li>高阶组件</li>
</ul>
</li>
<li>React生态和周边工具库<ul>
<li>react-router前端路由管理</li>
<li>React中表单数据收集、验证、回写</li>
<li>React文件上传</li>
<li>React其他开源组件使用</li>
<li>Enzyme测试React组件</li>
<li>React组件文档工具storybook</li>
</ul>
</li>
<li>Redux管理以及API集成<ul>
<li>理解redux</li>
<li>react-redux使用</li>
<li>Logger中间件</li>
<li>Tthunk中间件实现异步action</li>
<li>Redux调试工具</li>
</ul>
</li>
<li>CI/CD部署上线以及版本管理<ul>
<li>CI工具介绍</li>
<li>多环境配置</li>
<li>使用semantic-release进行版本管理</li>
<li>私有仓库</li>
</ul>
</li>
</ol>
<p>PS: 测试和项目实践贯穿整个过程</p>
]]></content>
      
        <categories>
            
            <category> react </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Circle CI 基本使用]]></title>
      <url>/CI-CD/devops/circleci%20basic/</url>
      <content type="html"><![CDATA[<h2 id="CircleCI是什么"><a href="#CircleCI是什么" class="headerlink" title="CircleCI是什么"></a>CircleCI是什么</h2><p>CircleCI is a continuous integration engine offered as SaaS and on premise.</p>
<h2 id="CircleCI特点"><a href="#CircleCI特点" class="headerlink" title="CircleCI特点"></a>CircleCI特点</h2><ul>
<li>容易和Github集成</li>
<li>SasS平台，无需自己搭建环境</li>
</ul>
<h2 id="有用的资源"><a href="#有用的资源" class="headerlink" title="有用的资源"></a>有用的资源</h2><ul>
<li>官网：<a href="https://circleci.com/" target="_blank" rel="external">https://circleci.com/</a></li>
<li>文档：<a href="https://circleci.com/docs/" target="_blank" rel="external">https://circleci.com/docs/</a></li>
<li>技术雷达的演讲keynote：<a href="http://wiki.printf.cn/media/CIrcleCI%20on%20tech%20Radar.key">http://wiki.printf.cn/media/CIrcleCI%20on%20tech%20Radar.key</a></li>
</ul>
<h2 id="一个构建java并部署的例子"><a href="#一个构建java并部署的例子" class="headerlink" title="一个构建java并部署的例子"></a>一个构建java并部署的例子</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="attr">version:</span> <span class="number">2</span></div><div class="line"><span class="attr">jobs:</span></div><div class="line"><span class="attr">  build:</span></div><div class="line"><span class="attr">    machine:</span></div><div class="line"><span class="attr">      java:</span></div><div class="line"><span class="attr">        version:</span> <span class="string">oraclejdk8</span></div><div class="line"></div><div class="line"><span class="attr">    working_directory:</span> <span class="string">~/whoisspy</span></div><div class="line"></div><div class="line"><span class="attr">    steps:</span></div><div class="line"></div><div class="line"><span class="bullet">      -</span> <span class="string">checkout</span></div><div class="line"></div><div class="line"><span class="attr">      - run:</span> <span class="string">./gradlew</span> <span class="string">clean</span> <span class="string">build</span></div><div class="line"></div><div class="line"><span class="attr">      - store_artifacts:</span></div><div class="line"><span class="attr">          path:</span> <span class="string">build/libs</span></div><div class="line"></div><div class="line"><span class="attr">  deploy:</span></div><div class="line"><span class="attr">    machine:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    working_directory:</span> <span class="string">~/whoisspy</span></div><div class="line"><span class="attr">    steps:</span></div><div class="line"></div><div class="line"><span class="bullet">      -</span> <span class="string">checkout</span></div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">Display</span> <span class="string">current</span> <span class="string">position</span></div><div class="line"><span class="attr">          command:</span> <span class="string">pwd</span></div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">Display</span> <span class="string">those</span> <span class="string">variables</span></div><div class="line"><span class="attr">          command:</span> <span class="string">env</span></div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">Download</span> <span class="string">jar</span> <span class="string">file</span></div><div class="line"><span class="attr">          command:</span> <span class="string">|</span></div><div class="line"></div><div class="line">            export CIRCLE_TOKEN='?circle-token=93106a0b530273d9cb344ea608bc609490fdf202'</div><div class="line"></div><div class="line">            curl https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PREVIOUS_BUILD_NUM/artifacts$CIRCLE_TOKEN | grep -o 'https://[^"]*' &gt; artifacts.txt</div><div class="line"></div><div class="line">            &lt;artifacts.txt xargs -P4 -I % wget %</div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">Display</span> <span class="string">whole</span> <span class="string">list</span></div><div class="line"><span class="attr">          command:</span> <span class="string">ls</span> <span class="bullet">-al</span> <span class="string">&amp;</span> <span class="string">aws</span> <span class="bullet">--version</span></div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">Change</span> <span class="string">permission</span> <span class="string">for</span> <span class="string">aws.pem</span></div><div class="line"><span class="attr">          command:</span> <span class="string">chmod</span> <span class="number">0600</span> <span class="string">.circleci/aws.pem</span></div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">SCP</span> <span class="string">file</span> <span class="string">to</span> <span class="string">instance</span></div><div class="line"><span class="attr">          command:</span> <span class="string">scp</span> <span class="bullet">-i</span> <span class="string">"./.circleci/aws.pem"</span> <span class="string">whoisspy-0.0.1-SNAPSHOT.jar</span> <span class="string">ubuntu@ec2-18-217-113-62.us-east-2.compute.amazonaws.com:/home/ubuntu/workspace/whoisspy-0.0.1-SNAPSHOT.jar</span></div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">login</span> <span class="string">to</span> <span class="string">target</span> <span class="string">instance</span></div><div class="line"><span class="attr">          command:</span> <span class="string">|</span></div><div class="line"></div><div class="line">            ssh -i "./.circleci/aws.pem" ubuntu@ec2-18-217-113-62.us-east-2.compute.amazonaws.com 'ls</div><div class="line">            cd workspace</div><div class="line">            #kill old instance</div><div class="line">            output=$( netstat -apn | grep 8086 | grep LISTEN) &amp;&amp; read num1 num2 num3 num4 num5  &lt;&lt;&lt;$&#123;output//[^0-9]/ &#125; &amp;&amp; kill -9 $num5 || pwd</div><div class="line"></div><div class="line">            # todo start new instance</div><div class="line">            java -jar whoisspy-0.0.1-SNAPSHOT.jar &gt; /dev/null 2&gt;&amp;1 &amp;</div><div class="line"></div><div class="line">            # test if it has been started</div><div class="line">            netstat -apn | grep 8086'</div><div class="line"></div><div class="line"><span class="attr">      - run:</span></div><div class="line"><span class="attr">          name:</span> <span class="string">last</span> <span class="string">step</span></div><div class="line"><span class="attr">          command:</span> <span class="string">pwd</span></div><div class="line"></div><div class="line"><span class="comment">#      - run:</span></div><div class="line"><span class="comment">#          name: kill ssh process</span></div><div class="line"><span class="comment">#          command: |</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#            pid=$( ps aux | grep amazonaws | awk '&#123;print $2&#125;' | sort -n | head -n 1 )</span></div><div class="line"><span class="comment">#            sleep 5 &amp;&amp; kill $&#123;pid&#125; &amp;&amp; echo "ssh command is complete"</span></div><div class="line"></div><div class="line"><span class="attr">workflows:</span></div><div class="line"><span class="attr">  version:</span> <span class="number">2</span></div><div class="line"><span class="attr">  build-deploy:</span></div><div class="line"><span class="attr">    jobs:</span></div><div class="line"><span class="bullet">      -</span> <span class="string">build</span></div><div class="line"><span class="attr">      - deploy:</span></div><div class="line"><span class="attr">          requires:</span></div><div class="line"><span class="bullet">            -</span> <span class="string">build</span></div><div class="line"><span class="attr">          filters:</span></div><div class="line"><span class="attr">            branches:</span></div><div class="line"><span class="attr">              only:</span> <span class="string">set-ci</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> CI&amp;CD </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[前端面试tips]]></title>
      <url>/interview/frontend/Interview%20for%20frontend/</url>
      <content type="html"><![CDATA[<h2 id="面试考察目标"><a href="#面试考察目标" class="headerlink" title="面试考察目标"></a>面试考察目标</h2><ul>
<li>对于编程语言的掌握程度，比如基本语法，语言特性等等</li>
<li>实际动手写代码的速度，比如敲代码过程中是否流畅</li>
<li>Code Smell的识别与重构能力</li>
<li>对于软件设计的理解深度</li>
<li>对遇到问题的解决思路以及反应速度</li>
<li>对新需求的反应和理解速度</li>
<li>对新事物的态度和学习能力，比如新IDE，TDD等</li>
<li>沟通交流、协作能力</li>
<li>对待Feedback的态度</li>
</ul>
<h2 id="面试准备"><a href="#面试准备" class="headerlink" title="面试准备"></a>面试准备</h2><ol>
<li>作业查看</li>
<li>收集上一轮面试反馈</li>
<li>关键信息收集<ul>
<li>姓名</li>
<li>技术栈</li>
<li>工作年限</li>
<li>项目经历</li>
<li>毕业院校</li>
</ul>
</li>
</ol>
<h2 id="准备问题的几个维度"><a href="#准备问题的几个维度" class="headerlink" title="准备问题的几个维度"></a>准备问题的几个维度</h2><ol>
<li>理论基础</li>
<li>常用编程技巧是否熟练</li>
<li>接受Feedback和沟通是否顺畅</li>
<li>学习能力</li>
<li>发现问题能力</li>
<li>工程设计能力</li>
<li>细节和质量控制能力</li>
</ol>
<h2 id="几个可选的问题"><a href="#几个可选的问题" class="headerlink" title="几个可选的问题"></a>几个可选的问题</h2><ol>
<li>工作中是否使用了ES6那些语法特性?</li>
<li>了解哪些前端框架和库，他们的特点是什么？</li>
<li>你觉得这里用xxx是不是好一些？</li>
<li>如果你拿到一个新的框架，会怎么去快速上手？</li>
<li>对于你的代码，你觉得哪些点还可以提升？</li>
<li>这些逻辑是不是可以抽象出来？</li>
<li>怎么写单元测试？</li>
</ol>
]]></content>
      
        <categories>
            
            <category> interview </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mock工具 wiremock]]></title>
      <url>/test/java/Wiremock%20for%20java/</url>
      <content type="html"><![CDATA[<p>Wiremock 是一个Java环境中的Mock工具，非常容易和Junit等单元测试框架集成。</p>
<h2 id="The-JUnit-4-x-Rule"><a href="#The-JUnit-4-x-Rule" class="headerlink" title="The JUnit 4.x Rule"></a>The JUnit 4.x Rule</h2><p>在JUnit4中可以使用Rule的注解，来直接启动</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Rule</span></div><div class="line"><span class="keyword">public</span> WireMockRule wireMockRule = <span class="keyword">new</span> WireMockRule(options().port(<span class="number">8888</span>).httpsPort(<span class="number">8889</span>));</div></pre></td></tr></table></figure>
<h2 id="standalone-模式"><a href="#standalone-模式" class="headerlink" title="standalone 模式"></a>standalone 模式</h2><p>这种模式可以使用Wiremock提供的jar运行文件直接启动。</p>
<blockquote>
<p>java -jar wiremock-standalone-2.11.0.jar</p>
</blockquote>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ol>
<li>可以使用录制模式来获取以后Mock的数据</li>
<li>如果遇到HTTPS需要配置certificate</li>
<li>更多信息查看文档 <a href="http://wiremock.org/docs/" target="_blank" rel="external">http://wiremock.org/docs/</a></li>
</ol>
<h2 id="一些资源"><a href="#一些资源" class="headerlink" title="一些资源"></a>一些资源</h2><p>官网</p>
<p><a href="http://wiremock.org/" target="_blank" rel="external">http://wiremock.org/</a></p>
]]></content>
      
        <categories>
            
            <category> test </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle 使用基础]]></title>
      <url>/java/java/Gradle%20basic/</url>
      <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Gradle 是一个打包工具和Maven一样能构建java项目。和前端类比的打包工具是Grunt等</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理``"></a>基本原理``</h2><p>Gradle创建的工程由 Project和Tasks，Gradle所有的任务都是通过引入插件和编写task来实现的</p>
<h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><p>`</p>
<p>buildscript {<br>    ext {<br>        springBootVersion = ‘1.5.6.RELEASE’<br>    }<br>    repositories {<br>        mavenCentral()<br>    }<br>    dependencies {<br>        classpath(“org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}”)<br>    }<br>}</p>
<p>apply plugin: ‘java’<br>apply plugin: ‘eclipse’<br>apply plugin: ‘org.springframework.boot’</p>
<p>version = ‘0.0.1-SNAPSHOT’<br>sourceCompatibility = 1.8</p>
<p>repositories {<br>    mavenCentral()<br>}</p>
<p>dependencies {</p>
<pre><code>compile(&apos;org.springframework.boot:spring-boot-starter-web&apos;)
compile group: &apos;org.springframework.boot&apos;, name: &apos;spring-boot-starter-data-jpa&apos;, version: &apos;1.5.3.RELEASE&apos;
compile group: &apos;javax.servlet.jsp.jstl&apos;, name: &apos;javax.servlet.jsp.jstl-api&apos;, version: &apos;1.2.1&apos;
compile group: &apos;org.apache.tomcat.embed&apos;, name: &apos;tomcat-embed-jasper&apos;, version: &apos;9.0.0.M25&apos;
compile group: &apos;javax.servlet&apos;, name: &apos;jstl&apos;, version: &apos;1.2&apos;
compile group: &apos;org.glassfish&apos;, name: &apos;javax.el&apos;, version: &apos;3.0.0&apos;
compile group: &apos;org.apache.commons&apos;, name: &apos;commons-lang3&apos;, version: &apos;3.0&apos;

runtime(&apos;mysql:mysql-connector-java&apos;)

testCompile(&apos;org.springframework.boot:spring-boot-starter-test&apos;)
</code></pre><p>}</p>
<p>`</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>查看所有的任务列表</p>
<blockquote>
<p>gradle tasks –all</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[API的contract测试之Pact]]></title>
      <url>/test/test/Contract%20testing%20&amp;%20PACT/</url>
      <content type="html"><![CDATA[<h2 id="why"><a href="#why" class="headerlink" title="why?"></a>why?</h2><p>当我们构建API的时候，需要保证API输出稳定，因此我们可以使用契约测试。<br>我们可以定义一个契约文件，然后消费者和API提供者并行开发，最终进行集成测试。</p>
<h2 id="pact-和-contact的区别"><a href="#pact-和-contact的区别" class="headerlink" title="pact 和 contact的区别"></a>pact 和 contact的区别</h2><p>pact 是contact测试的一个实现</p>
<h2 id="一些资源"><a href="#一些资源" class="headerlink" title="一些资源"></a>一些资源</h2><ul>
<li>pact文档 <a href="https://docs.pact.io" target="_blank" rel="external">https://docs.pact.io</a></li>
<li>Java 例子 <a href="https://github.com/DiUS/pact-workshop-jvm" target="_blank" rel="external">https://github.com/DiUS/pact-workshop-jvm</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> test </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mysql 基本管理命令]]></title>
      <url>/mysql/mysql/Mysql%20baisc%20operation/</url>
      <content type="html"><![CDATA[<p>一、从命令行登录MySQL数据库服务器 1、登录使用默认3306端口的MySQL</p>
<p>/usr/local/mysql/bin/mysql -u root -p</p>
<p>2、通过TCP连接管理不同端口的多个MySQL（注意：MySQL4.1以上版本才有此项功能）</p>
<p>/usr/local/mysql/bin/mysql -u root -p –protocol=tcp –host=localhost –port=3307</p>
<p>3、通过socket套接字管理不同端口的多个MySQL</p>
<p>/usr/local/mysql/bin/mysql -u root -p –socket=/tmp/mysql3307.sock</p>
<p>4、通过端口和IP管理不同端口的多个MySQL</p>
<p>/usr/local/mysql/bin/mysql -u root -p -P 3306 -h 127.0.0.1</p>
<hr>
<p>二、数据库操作SQL语句 1、显示服务器上当前存在什么数据库</p>
<p>SHOW DATABASES;</p>
<p>2、创建名称为rewin的数据库</p>
<p>CREATE DATABASE rewin;</p>
<p>3、删除名称为rewin的数据库</p>
<p>DROP DATABASE rewin;</p>
<p>4、选择rewin数据库</p>
<p>USE rewin;</p>
<hr>
<p>三、表操作SQL语句（登录之后必须用以上的USE命令选择一个数据库，再进行表操作） 1、显示当前数据库中存在什么表</p>
<p>SHOW TABLES;</p>
<p>2、创建数据库表zhangyan：在mysql&gt;后粘贴以下SQL语句，存储引擎为MYISAM，字段id为主键、唯一索引</p>
<p>。</p>
<p>CREATE TABLE <code>zhangyan</code> ( <code>id</code> INT( 5 ) UNSIGNED NOT NULL AUTO_INCREMENT , <code>username</code> VARCHAR( 20 ) NOT NULL , <code>password</code> CHAR( 32 ) NOT NULL , <code>time</code> DATETIME NOT NULL , <code>number</code> FLOAT( 10 ) NOT NULL , <code>content</code> TEXT NOT NULL , PRIMARY KEY ( <code>id</code> ) ) ENGINE = MYISAM ;</p>
<p>3、查看zhangyan表结构</p>
<p>DESCRIBE zhangyan;</p>
<p>4、从表中检索信息 4.1、从zhangyan表中检索所有记录</p>
<p>SELECT * FROM zhangyan;</p>
<p>4.2、从zhangyan表中检索特定的行：字段username等于abc，字段number等于1，按字段id降序排列</p>
<p>SELECT * FROM zhangyan WHERE username = abc AND number=1 ORDER BY id DESC;</p>
<p>4.3、从zhangyan表中检索指定的字段：username和password</p>
<p>SELECT username, password FROM zhangyan;</p>
<p>4.4、从zhangyan表中检索出唯一的不重复记录：</p>
<p>SELECT DISTINCT username FROM zhangyan;</p>
<p>5、插入信息到zhangyan表</p>
<p>INSERT INTO zhangyan (id, username, password, time, number, content) VALUES (, abc, 123456,</p>
<p>2007-08-06 14:32:12, 23.41, hello world);</p>
<p>6、更新zhangyan表中的指定信息</p>
<p>UPDATE zhangyan SET content = hello china WHERE username = abc;</p>
<p>7、删除zhangyan表中的指定信息</p>
<p>DELETE FROM zhangyan WHERE id = 1;</p>
<p>8、清空zhangyan表</p>
<p>DELETE FROM zhangyan;</p>
<p>9、删除zhangyan表</p>
<p>DROP TABLE zhangyan;</p>
<p>10、更改表结构，将zhangyan表username字段的字段类型改为CHAR(25)</p>
<p>ALTER TABLE zhangyan CHANGE username username CHAR(25);</p>
<p>11、将当前目录下的mysql.sql导入数据库</p>
<p>SOURCE ./mysql.sql;</p>
<hr>
<p>四、数据库权限操作SQL语句 1、创建一个具有root权限，可从任何IP登录的用户sina，密码为zhangyan</p>
<p>GRANT ALL PRIVILEGES ON <em>.</em> TO sina@% IDENTIFIED BY zhangyan;</p>
<p>2、创建一个具有”数据操作”、”结构操作”权限，只能从192.168.1.<em>*</em>登录的用户sina，密码为zhangyan</p>
<p>GRANT SELECT , INSERT , UPDATE , DELETE , FILE , CREATE , DROP , INDEX , ALTER , CREATE</p>
<p>TEMPORARY TABLES , CREATE VIEW , SHOW VIEW , CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON</p>
<p><em>.</em> TO sina@192.168.1.% IDENTIFIED BY zhangyan;</p>
<p>3、创建一个只拥有”数据操作”权限，只能从192.168.1.24登录，只能操作rewin数据库的zhangyan表的用户</p>
<p>sina，密码为zhangyan</p>
<p>GRANT SELECT , INSERT , UPDATE , DELETE ON  rewin.zhangyan TO sina@192.168.1.24 IDENTIFIED BY</p>
<p>zhangyan;</p>
<p>4、创建一个拥有”数据操作”、”结构操作”权限，可从任何IP登录，只能操作rewin数据库的用户sina，密码为</p>
<p>zhangyan</p>
<p>GRANT SELECT , INSERT , UPDATE , DELETE , CREATE , DROP , INDEX , ALTER , CREATE TEMPORARY</p>
<p>TABLES , CREATE VIEW , SHOW VIEW , CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON rewin.* TO</p>
<p>sina@% IDENTIFIED BY zhangyan;</p>
<p>5、删除用户</p>
<p>DROP USER sina@%;</p>
<p>6.MySQL中将字符串aaa批量替换为bbb的SQL语句</p>
<p>UPDATE 表名 SET 字段名 = REPLACE (字段名, aaa, bbb);</p>
<p>7.修复损坏的表       ①、用root帐号从命令行登录MySQL： 　　     mysql -u root -p</p>
<p>　　②、输入root帐号的密码。</p>
<p>　　③、选定数据库名（本例中的数据库名为student）： 　　use student;</p>
<p>　　④、修复损坏的表（本例中要修复的表为smis_user_student）： 　　repair table smis_user_student;udent;</p>
]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu上的MySQL安装]]></title>
      <url>/mysql/mysql/Mysql%20configuration/</url>
      <content type="html"><![CDATA[<h2 id="首先检查系统中是否已经安装了MySQL"><a href="#首先检查系统中是否已经安装了MySQL" class="headerlink" title="首先检查系统中是否已经安装了MySQL"></a>首先检查系统中是否已经安装了MySQL</h2><p>在终端里面输入 sudo netstat -tap | grep mysql</p>
<p>若没有反映，没有显示已安装结果，则没有安装。若如下显示，则表示已经安装</p>
<h2 id="如果没有安装，则安装MySQL"><a href="#如果没有安装，则安装MySQL" class="headerlink" title="如果没有安装，则安装MySQL."></a>如果没有安装，则安装MySQL.</h2><p>在终端输入 sudo apt-get install mysql-server mysql-client</p>
<p>在此安装过程中会让你输入root用户(管理MySQL数据库用户，非Linux系统用户)密码，按照要求输入即可。如下所示：</p>
<h2 id="测试安装是否成功："><a href="#测试安装是否成功：" class="headerlink" title="测试安装是否成功："></a>测试安装是否成功：</h2><p>在终端输入 sudo netstat -tap | grep mysql</p>
<h2 id="也可通过登录MySQL测试"><a href="#也可通过登录MySQL测试" class="headerlink" title="也可通过登录MySQL测试"></a>也可通过登录MySQL测试</h2><p>在终端输入 mysql -uroot -p 接下来会提示你输入密码，输入正确密码，即可进入。如下所示：</p>
<h2 id="MySQL的一些简单管理："><a href="#MySQL的一些简单管理：" class="headerlink" title="MySQL的一些简单管理："></a>MySQL的一些简单管理：</h2><p>启动MySQL服务： ssudo /etc/init.d/mysql start</p>
<p>停止MySQL服务： sudo /etc/init.d/mysql stop</p>
<p>修改 MySQL 的管理员密码： sudo mysqladmin -u root password newpassword</p>
<p>设置远程访问(正常情况下，mysql占用的3306端口只是在IP 127.0.0.1上监听，拒绝了其他IP的访问（通过netstat可以查看到）。取消本地监</p>
<p>听需要修改 my.cnf 文件：)：</p>
<p>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf</p>
<p>bind-address = 127.0.0.1 //找到此内容并且注释</p>
<h2 id="MySQL安装后的目录结构分析-此结构只针对于使用apt-get-install-在线安装情况-："><a href="#MySQL安装后的目录结构分析-此结构只针对于使用apt-get-install-在线安装情况-：" class="headerlink" title="MySQL安装后的目录结构分析(此结构只针对于使用apt-get install 在线安装情况)："></a>MySQL安装后的目录结构分析(此结构只针对于使用apt-get install 在线安装情况)：</h2><p>数据库存放目录： /var/lib/mysql/</p>
<p>相关配置文件存放目录： /usr/share/mysql</p>
<p>相关命令存放目录： /usr/bin(mysqladmin mysqldump等命令)</p>
<p>启动脚步存放目录： /etc/rc.d/init.d/</p>
<h2 id="MySQL图形化管理软件"><a href="#MySQL图形化管理软件" class="headerlink" title="MySQL图形化管理软件"></a>MySQL图形化管理软件</h2><p>一般使用的有两个比较好，一个开源，一个商业收费：</p>
<p>开源：MySQL Workbench （具体使用介绍随着我的使用，我会慢慢总结）</p>
<p>商业：Navicat （收费的，有30天体验，之后我相信大家会有办法的）</p>
<p>至此，Linux(Ubuntu)下的MyQL安装与配置全部完毕。</p>
]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Manage your meeting?]]></title>
      <url>/method/Manage%20your%20meeting/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> method </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在Ubuntu上通过apt-get搭建tomcat]]></title>
      <url>/java/Java%20environment%20in%20linux/</url>
      <content type="html"><![CDATA[<p>参考博客：<a href="https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-7-on-ubuntu-14-04-via-apt-get" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-7-on-ubuntu-14-04-via-apt-get</a><br>翻译版：<a href="http://www.linfuyan.com/how-to-install-apache-tomcat7-on-ubuntu-14-04-via-apt-get/" target="_blank" rel="external">http://www.linfuyan.com/how-to-install-apache-tomcat7-on-ubuntu-14-04-via-apt-get/</a></p>
<h2 id="关于-Apache-Tomcat"><a href="#关于-Apache-Tomcat" class="headerlink" title="关于 Apache Tomcat"></a>关于 Apache Tomcat</h2><p>Apache Tomcat 是一个服务器应用，通常用来部署 Java 应用到 Web 。 Tomcat 是 Java Servlet 与 JSP 技术的一个开源实现，由 Apache 软件基金会发布。</p>
<p>这个教程涵盖了在 Ubuntu 14.04 上 Tomcat 7.0.x 版本的安装和基础配置。</p>
<p>有两种基本的途径来安装 Tomcat 到 Ubuntu 上：</p>
<p>通过 apt-get 工具来安装，这是最简单的方法。<br>从 Apache Tomcat 网站下载二进制发布包。本教程不涵盖这种方法。<br>在这个教程中，我们将使用最简单地方法： apt-get 。这将从官方的 Ubuntu 资源仓库安装最新的 Tomcat 发布包，这个包可能不是 Tomcat 的最新发布版本。如果你想要确保安装 Tomcat 的最新版，你可以下载最新的二进制发布包。</p>
<h2 id="步骤一-先决条件"><a href="#步骤一-先决条件" class="headerlink" title="步骤一 - 先决条件"></a>步骤一 - 先决条件</h2><p>在你开始这个向导之前，在你的服务器上需要配置一个独立的非 root 用户账号。你可以按照 Ubuntu 14.04 上搭建服务器中的 1-4 步来学习完成它。我们这里使用创建的 demo 用户来完成后续的教程。</p>
<h2 id="步骤二-安装-Tomcat"><a href="#步骤二-安装-Tomcat" class="headerlink" title="步骤二 - 安装 Tomcat"></a>步骤二 - 安装 Tomcat</h2><p>首先，你需要升级 apt-get 软件包列表：</p>
<blockquote>
<p>sudo apt-get update</p>
</blockquote>
<p>现在你已经准备好安装 Tomcat。运行以下命令，开始安装：</p>
<blockquote>
<p>sudo apt-get install tomcat7</p>
</blockquote>
<p>输入 yes 来安装 Tomcat 。这将同时安装 Tomcat 和它的依赖，例如 Java，同时，它将创建一个 tomcat7 用户，并以默认设置启动 Tomcat 。</p>
<p>这时候， Tomcat 并没有完全安装完成，但你可以通过在浏览器中输入本地域名或IP地址之后加 :8080 的方法来访问默认页面。</p>
<blockquote>
<p><a href="http://your_ip_address:8080" target="_blank" rel="external">http://your_ip_address:8080</a><br>你会看到一个闪屏页面，显示 “It works” ，和其他附加信息。现在，我们要深入到 Tomcat 的安装过程。</p>
</blockquote>
<h2 id="步骤三-安装额外软件包"><a href="#步骤三-安装额外软件包" class="headerlink" title="步骤三 - 安装额外软件包"></a>步骤三 - 安装额外软件包</h2><p>注意：如果你对 Tomcat 足够了解，且不需要 Web 管理接口，文档和示例，那这个章节不是必须的。如果你是第一次接触 Tomcat ，请继续。</p>
<p>通过以下代码，你将安装 Tomcat 的在线文档， Web接 口（管理 Web 应用），以及一些示例应用。</p>
<blockquote>
<p>sudo apt-get install tomcat7-docs tomcat7-admin tomcat7-examples</p>
</blockquote>
<h2 id="步骤四-配置-Tomcat-Web-管理器"><a href="#步骤四-配置-Tomcat-Web-管理器" class="headerlink" title="步骤四 - 配置 Tomcat Web 管理器"></a>步骤四 - 配置 Tomcat Web 管理器</h2><p>想要使用步骤三中安装的 Web 应用管理器，需要先登录到 Tomcat 服务器。首先需要编辑修改 tomcat-users.xml ：</p>
<blockquote>
<p>sudo nano /etc/tomcat7/tomcat-users.xml<br>该文件充满了用于说明如何配置的注释。你需要删除下面两行之间的所有注释。如需要用作参考，则保留。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;tomcat-users&gt;</div><div class="line">&lt;/tomcat-users&gt;</div></pre></td></tr></table></figure>
<p>你需要添加一个用户，可以访问 manager-gui 和 admin-gui （我们在步骤三种安装的管理界面）。你可以通过如下的配置来定义一个用户。如果需要，确保修改用户名和密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;tomcat-users&gt;</div><div class="line">	&lt;user username=&quot;admin&quot; password=&quot;password&quot; roles=&quot;manager-gui,admin-gui&quot; /&gt;</div><div class="line">&lt;/tomcat-users&gt;</div></pre></td></tr></table></figure></p>
<p>保存并退出 tomcat-users.xml 文件。重启 Tomcat 服务，以便修改配置生效。</p>
<blockquote>
<p>sudo service tomcat7 restart</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Java构建API的知识体系]]></title>
      <url>/java/Java%20api%20tech%20map/</url>
      <content type="html"><![CDATA[<ul>
<li>API基本概念及资源的定义</li>
<li>RESTful架构风格与成熟度模型</li>
<li>规范化接口定义与设计</li>
<li>JSON API Spec</li>
<li>初始化项目环境并启动一个API Demo</li>
<li>用Spring Boot快速构建项目</li>
<li>Swagger UI对API文档化</li>
<li>搭建多个不同业务的APIs</li>
<li>API升级及版本控制策略</li>
<li>API的认证与授权（常用的API认证方法及安全问题）</li>
<li>Axway网关集成及流量控制</li>
<li>服务负载均衡ELB/F5</li>
<li>Hyxtrix故障熔断器，阻止故障雪崩</li>
<li>API中使用RxJava进行响应式编程</li>
<li>最佳实践及总结</li>
<li>日志监控与错误追踪</li>
<li>调用链跟踪和性能面板</li>
<li>Dynatrace &amp; Zipkin</li>
<li>AH Portal &amp; Splunk</li>
<li>什么是消费者契约测试？</li>
<li>契约测试工具Pact的使用</li>
<li>Spring Cloud Contract的使用？</li>
<li>API测试工具的使用（SoapUI/Postman/自动化测试）</li>
<li>Spring Cloud 理念</li>
<li>配置服务器应用</li>
<li>API服务注册与发现</li>
<li>GraphQL?</li>
<li>遗留系统向微服务架构迁移</li>
<li>最佳实践</li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Java CMS 选型]]></title>
      <url>/java/java/cms%20in%20java/</url>
      <content type="html"><![CDATA[<h2 id="技术要求"><a href="#技术要求" class="headerlink" title="技术要求"></a>技术要求</h2><p>SpringMVC+Mybatis+freemarker/JSP</p>
<h2 id="通用后台快速开发方案"><a href="#通用后台快速开发方案" class="headerlink" title="通用后台快速开发方案"></a>通用后台快速开发方案</h2><ul>
<li><a href="https://github.com/white-cat/jeeweb" target="_blank" rel="external">https://github.com/white-cat/jeeweb</a></li>
<li><a href="https://github.com/kanwangzjm/funiture" target="_blank" rel="external">https://github.com/kanwangzjm/funiture</a></li>
</ul>
<h2 id="成品CMS方案"><a href="#成品CMS方案" class="headerlink" title="成品CMS方案"></a>成品CMS方案</h2><ul>
<li><a href="http://www.tjpcms.com" target="_blank" rel="external">http://www.tjpcms.com</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[How to end a meeting?]]></title>
      <url>/english/How%20to%20wrap%20up/</url>
      <content type="html"><![CDATA[<h2 id="some-of-usages"><a href="#some-of-usages" class="headerlink" title="some of usages"></a>some of usages</h2><ul>
<li>“any questions”</li>
<li>“any comments”</li>
<li>“any other updates”</li>
</ul>
<h2 id="Summarize"><a href="#Summarize" class="headerlink" title="Summarize"></a>Summarize</h2><ul>
<li>“Today we have covered”</li>
<li>“in this meeting we have discussed”</li>
<li>“The main points that I’d like to sum up are”</li>
<li>“To summarize today’s meeting”</li>
<li>“Let me summarize what we have talked about today before we finish”</li>
</ul>
<h2 id="重点单词"><a href="#重点单词" class="headerlink" title="重点单词"></a>重点单词</h2><ul>
<li>Sum up 口语上的summarize</li>
<li>Recap 复盘，重述</li>
</ul>
<h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>express the time run out of time</p>
<ul>
<li>it seems as though we’ve run out of time for today</li>
<li>Unfortunately we are out of time </li>
</ul>
<p>express to close a meeting </p>
<ul>
<li>Let’s call a day</li>
<li>Let’s wrap up</li>
<li>that’s all for our meeting</li>
</ul>
]]></content>
      
        <categories>
            
            <category> english </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Python 入门]]></title>
      <url>/python/python%20basic/</url>
      <content type="html"><![CDATA[<h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>入门教程： <a href="http://www.runoob.com/python/python-tutorial.html" target="_blank" rel="external">http://www.runoob.com/python/python-tutorial.html</a></p>
<h2 id="Python-是什么？"><a href="#Python-是什么？" class="headerlink" title="Python 是什么？"></a>Python 是什么？</h2><p>Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。<br>Python 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。</p>
<ul>
<li>Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。</li>
<li>Python 是交互式语言： 这意味着，您可以在一个Python提示符，直接互动执行写你的程序。</li>
<li>Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。</li>
<li>Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。</li>
</ul>
<h2 id="安装-Python-in-Mac"><a href="#安装-Python-in-Mac" class="headerlink" title="安装 Python in Mac"></a>安装 Python in Mac</h2><p><a href="https://www.python.org/downloads/" target="_blank" rel="external">https://www.python.org/downloads/</a><br>推荐使用版本为2.7</p>
<h2 id="进入交互模式"><a href="#进入交互模式" class="headerlink" title="进入交互模式"></a>进入交互模式</h2><p>linux上你只需要在命令行中输入 Python 命令即可启动交互式编程</p>
<p>## </p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[怎么样快速入门/学习一项技术]]></title>
      <url>/method/How%20to%20learn%20something%20quickly/</url>
      <content type="html"><![CDATA[<h2 id="技术类知识学习的流程"><a href="#技术类知识学习的流程" class="headerlink" title="技术类知识学习的流程"></a>技术类知识学习的流程</h2><ol>
<li>回答几个问题<ul>
<li>这项技术是什么？</li>
<li>这项技术的意义？</li>
<li>这项技术的定位？</li>
<li>为什么需要学习这项技术  </li>
</ul>
</li>
<li>收集入门教程</li>
<li>阅读入门教程产出笔记或者思维导图</li>
<li>使用小项目练习</li>
<li>阅读官方文档了解更多</li>
<li>搞懂原理（可选）</li>
</ol>
<h2 id="学习一门新技术的要点"><a href="#学习一门新技术的要点" class="headerlink" title="学习一门新技术的要点"></a>学习一门新技术的要点</h2><ul>
<li>咨询有经验的人，需要提前准备问题，寻求一些好的资料和书籍</li>
<li>阅读速度不宜过快，安排大块时间。step by step</li>
<li>一定要有产出</li>
<li>可以编写一些例子和demo放到wiki中</li>
</ul>
]]></content>
      
        <categories>
            
            <category> method </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Lambda 入门]]></title>
      <url>/aws/devops/aws%20lambda/</url>
      <content type="html"><![CDATA[<h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>Official website:<br><a href="http://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-app.html" target="_blank" rel="external">http://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-app.html</a></p>
<p>A video tutorial:<br><a href="https://www.lynda.com/Amazon-Web-Services-tutorials/Serverless-architectures-AWS-Lambda/569195/617984-4.html?srchtrk=index%3a3%0alinktypeid%3a2%0aq%3alambda+aws%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2" target="_blank" rel="external">https://www.lynda.com/Amazon-Web-Services-tutorials/Serverless-architectures-AWS-Lambda/569195/617984-4.html?srchtrk=index%3a3%0alinktypeid%3a2%0aq%3alambda+aws%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2</a></p>
<h2 id="什么是Lambda？"><a href="#什么是Lambda？" class="headerlink" title="什么是Lambda？"></a>什么是Lambda？</h2><p>AWS Lambda 是一项计算服务，可使您无需预配置或管理服务器即可运行代码。AWS Lambda 只在需要时执行您的代码并自动缩放，从每天几个请求到每秒数千个请求。您只需按消耗的计算时间付费 – 代码未运行时不产生费用。借助 AWS Lambda，您几乎可以为任何类型的应用程序或后端服务运行代码，而且无需执行任何管理。AWS Lambda 在可用性高的计算基础设施上运行您的代码，执行计算资源的所有管理工作，其中包括服务器和操作系统维护、容量预置和自动扩展、代码监控和记录。您只需要以 AWS Lambda 支持的一种语言 (目前为 Node.js、Java、C# 和 Python) 提供您的代码。</p>
<h2 id="为什么需要学习它？"><a href="#为什么需要学习它？" class="headerlink" title="为什么需要学习它？"></a>为什么需要学习它？</h2><p>Lambda 提供了一种与环境无关的代码执行平台，更加灵活去使用</p>
<h2 id="这项技术定位"><a href="#这项技术定位" class="headerlink" title="这项技术定位"></a>这项技术定位</h2><p>新技术可以用在私人或者试用项目中，产品环境暂时不推荐使用，类似于BAE等平台</p>
<h2 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h2><p>实际上Lambda 包含了函数和事件系统。在AWS中可以设定各种不同的事件源来trigger我们的Lambda函数</p>
<h2 id="构建-Lambda-函数"><a href="#构建-Lambda-函数" class="headerlink" title="构建 Lambda 函数"></a>构建 Lambda 函数</h2><p>Lambda函数可以在本地开发环境中开发，然后上传到AWS平台上运行。目前AWS支持四种编程语言：</p>
<ul>
<li>Nodejs</li>
<li>Java</li>
<li>Python</li>
<li>C#</li>
</ul>
<p>编写相关的程序需要遵守一些基本程序结构，因此AWS能解析并执行。</p>
<p>## </p>
]]></content>
      
        <categories>
            
            <category> aws </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[英文邮件写作]]></title>
      <url>/communication/write%20better%20email/</url>
      <content type="html"><![CDATA[<h1 id="邮件标题"><a href="#邮件标题" class="headerlink" title="邮件标题"></a>邮件标题</h1><p>推荐使用动词、正面的词语</p>
<p>Not good:</p>
<blockquote>
<p>Could you review the pull request?</p>
</blockquote>
<p>Bat good:</p>
<blockquote>
<p>Approval for pull request</p>
</blockquote>
<h1 id="Greeting"><a href="#Greeting" class="headerlink" title="Greeting"></a>Greeting</h1><h2 id="称呼"><a href="#称呼" class="headerlink" title="称呼"></a>称呼</h2><p>称呼使用’Dear’ or ‘Hi’？Dear 比 Hi 正式</p>
<h2 id="称谓"><a href="#称谓" class="headerlink" title="称谓"></a>称谓</h2><p>姓、名不能混，如果不能分清楚称呼，使用 ‘please correct me if I was wrong’<br>如果对方有头衔，比如doctor，应该使用 doctor xxx</p>
<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><p>TIPS</p>
<ol>
<li>开始直接表明来意， I am writing to xxx</li>
<li>意图明显，比如是为了report或者寻求帮助</li>
<li>结束方法：<ol>
<li>寻求更多communication</li>
<li>寻求Feedback</li>
<li>感谢</li>
<li>offer potential help</li>
</ol>
</li>
</ol>
<h1 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h1><p>1.使用Best regards<br>2.thanks</p>
<h1 id="summary-of-learn-points"><a href="#summary-of-learn-points" class="headerlink" title="summary of learn points"></a>summary of learn points</h1><p>the fundamentals of Email</p>
<ul>
<li>Subject - catching attention in a positive way</li>
<li>Greeting - appropriate</li>
<li>Purpose - state it at the beginning </li>
<li>Request - Be noticeable,clear and flexible</li>
<li>Ending - invite communication and off help </li>
<li>Sign-off - professional</li>
</ul>
<h1 id="something-is-suitable-via-email"><a href="#something-is-suitable-via-email" class="headerlink" title="something is suitable via email"></a>something is suitable via email</h1><ul>
<li>Need to record for future reference</li>
<li>Communication to multiple </li>
<li>The different time zone </li>
<li>Need someone take time to deal with</li>
<li>Report</li>
</ul>
<h1 id="something-is-not-suitable-via-email"><a href="#something-is-not-suitable-via-email" class="headerlink" title="something is not suitable via email"></a>something is not suitable via email</h1><ul>
<li>Urgent things </li>
<li>negative staff</li>
<li>complicated situation</li>
</ul>
<h1 id="Questions"><a href="#Questions" class="headerlink" title="Questions"></a>Questions</h1><ul>
<li>mark text as bold?</li>
<li>directly or indirectly</li>
<li>how to make a appropriate appreciation</li>
</ul>
]]></content>
      
        <categories>
            
            <category> communication </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS样式框架选型]]></title>
      <url>/collection/frontend%20boilderplate/</url>
      <content type="html"><![CDATA[<p>浏览器样式重置基本样式<br><a href="http://necolas.github.io/normalize.css/" target="_blank" rel="external">http://necolas.github.io/normalize.css/</a></p>
<p>simple, responsive boilerplate.<br><a href="http://getskeleton.com/" target="_blank" rel="external">http://getskeleton.com/</a></p>
<p>推荐使用，简单纯净易于修改，适用于定制性更强的项目</p>
<p>frozenui 腾讯出品</p>
<p><a href="http://frozenui.github.io/" target="_blank" rel="external">http://frozenui.github.io/</a></p>
<p>妹子UI，中国版的bootstrap<br><a href="http://amazeui.org/" target="_blank" rel="external">http://amazeui.org/</a></p>
]]></content>
      
        <categories>
            
            <category> collection </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[必背的常用VIM命令]]></title>
      <url>/collection/common-vim-commands/</url>
      <content type="html"><![CDATA[<p>通常来讲,我们不需要使用VIM做开发,但是需要掌握基本的VIM命令,因为需要在服务器上使用。<br>网上的VIM命令表太长,整理一个基本的命令表</p>
<p>【按下Esc后的命令模式执行</p>
<hr>
<pre><code>a       插入字母后
i       插入当前光标
</code></pre><hr>
<pre><code>dd       删除当前行
yy       复制当前行
</code></pre><hr>
<pre><code>         v       选择
         d       剪切
         y       复制
         p       粘贴在当前光标处上面
         P       粘贴在当前光标处下面
shift+p       在当前行前粘贴
</code></pre><hr>
<pre><code>       u       撤销操作
ctrl+r       重复操作
</code></pre><hr>
<pre><code>          ^       移动到本行第一个非空白字符上
0(数字0)      移动到本行第一个字符上,
          $       移动到行尾
        3$       移动到下面3行的行尾
   ctrl+f       跳转下一页
  ctrl+b       跳转上一页
    [[/gg       文件头
     ]]/G       文件尾
</code></pre><hr>
<pre><code>:set nu       显示行号
    :100       跳转到100位置
</code></pre><hr>
<pre><code>:q!       不保存退出
 :w       保存
  :x       保存退出
</code></pre><hr>
<pre><code>/xxx       向后查找xxx
?xxx       向上查找xxx
     n       继续查找下一个
</code></pre><h2 id="set-nohlsearch-关闭高亮搜索显示"><a href="#set-nohlsearch-关闭高亮搜索显示" class="headerlink" title="   :set nohlsearch       关闭高亮搜索显示"></a>   :set nohlsearch       关闭高亮搜索显示</h2><p>  :%s/abc/123/gc       将abc替换成123</p>
]]></content>
      
        <categories>
            
            <category> collection </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ansible 入门和使用]]></title>
      <url>/devops/devops/ansible/</url>
      <content type="html"><![CDATA[<p>官网: <a href="https://www.ansible.com/get-started" target="_blank" rel="external">https://www.ansible.com/get-started</a><br>工作原理:<a href="https://www.ansible.com/how-ansible-works" target="_blank" rel="external">https://www.ansible.com/how-ansible-works</a><br>下载和安装:<a href="http://docs.ansible.com/ansible/latest/intro_installation.html" target="_blank" rel="external">http://docs.ansible.com/ansible/latest/intro_installation.html</a><br>编写自己的脚本:<a href="http://docs.ansible.com/ansible/latest/playbooks.html" target="_blank" rel="external">http://docs.ansible.com/ansible/latest/playbooks.html</a><br>一些ansible 例子:<a href="https://github.com/ansible/ansible-examples" target="_blank" rel="external">https://github.com/ansible/ansible-examples</a></p>
<p>使用ansible playbook部署LAMP<br><a href="https://github.com/ansible/ansible-examples/tree/master/lamp_simple" target="_blank" rel="external">https://github.com/ansible/ansible-examples/tree/master/lamp_simple</a></p>
<p>我的常用脚本仓库</p>
<p><a href="https://github.com/linksgo2011/deployment-automation" target="_blank" rel="external">https://github.com/linksgo2011/deployment-automation</a></p>
<h3 id="Check-Mode-“Dry-Run”"><a href="#Check-Mode-“Dry-Run”" class="headerlink" title="Check Mode (“Dry Run”)"></a>Check Mode (“Dry Run”)</h3><p>ansible version 1.1 后提供了一种dryrun环境，使得我们可以测试我们的脚本而不造成任何changes</p>
<p><a href="http://docs.ansible.com/ansible/latest/playbooks_checkmode.html#id1" target="_blank" rel="external">http://docs.ansible.com/ansible/latest/playbooks_checkmode.html#id1</a></p>
<p>Example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ansible-playbook foo.yml --check</div></pre></td></tr></table></figure>
<h3 id="Ansible-test"><a href="#Ansible-test" class="headerlink" title="Ansible test"></a>Ansible test</h3><p><a href="http://docs.ansible.com/ansible/latest/dev_guide/testing.html" target="_blank" rel="external">http://docs.ansible.com/ansible/latest/dev_guide/testing.html</a></p>
]]></content>
      
        <categories>
            
            <category> devops </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[常用开源项目收集]]></title>
      <url>/collection/common%20tools/</url>
      <content type="html"><![CDATA[<p><a href="http://veyon.io/#" target="_blank" rel="external">http://veyon.io/#</a></p>
<p>非常不错的开源教学软件</p>
<p><img src="http://veyon.io/img/veyon-features.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> collection </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac 环境下使用MAMP安装PHP环境]]></title>
      <url>/php/php-mamp/</url>
      <content type="html"><![CDATA[<p>下载安装MAMP</p>
<p><a href="https://www.mamp.info/en/mamp-pro/" target="_blank" rel="external">https://www.mamp.info/en/mamp-pro/</a></p>
<p>设置默认的PHP为MAMP</p>
<blockquote>
<p>export PATH=”/Applications/MAMP/bin/php/php5.5.38/bin:$PATH”</p>
</blockquote>
<p>另一种方法更为简便,为MAMP的PHP设置一个别名即可</p>
<blockquote>
<p>alias phpmamp=/Applications/MAMP/bin/php/php5.5.38/bin/php</p>
</blockquote>
<p>破解安装更多版本的PHP</p>
<p>MAMP PRO 提供了更多的PHP版本选择,但是MAMP只提供了2个,实际上在MAMP安装目录下有多个PHP版本我们可以删除一些无用的PHP版本即可。</p>
]]></content>
      
        <categories>
            
            <category> php </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP拓展Linux/unix 下的编译安装]]></title>
      <url>/php/PHP%20extension/</url>
      <content type="html"><![CDATA[<p>在Linux下PHP如果出现了拓展不能被安装的情况时,需要自己安装拓展。</p>
<p>一般来说需要安装相应系统库:比如libmcrypt和相应的拓展.so文件,下面使用mycrypt作为例子</p>
<p>MCrypt是一个功能强大的加密算法扩展库，它包括有22种算法。</p>
<p>1:下载并解压mcrypt-2.6.8.tar.bz2。（2.6.8为版本号，可以自行选择，但是注意后边步骤要与下载的版本号一致。）<br>2:在终端执行命令（注意如下命令需要安装xcode支持）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">cd ~/Downloads/mcrypt-2.5.8</div><div class="line">./configure --disable-posix-threads --enable-static</div><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<p><em>实际上这一步在Ubuntu上可以使用 apt-get 工具安装,在Mac上使用homebrew安装</em></p>
<p>3：下载并解压php源码，根据自己情况选择对应版本。(注意以下命令中php的版本)<br>在终端执行命令：（如果出错请看后边）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd ~/Downloads/php-5.5.14/ext/mcrypt</div><div class="line">phpize</div><div class="line">./configure</div><div class="line">make</div><div class="line">cd modules</div><div class="line">sudo cp mcrypt.so /usr/lib/php/extensions/no-debug-non-zts-20121212/</div><div class="line">//上面可以使用make install 代替</div></pre></td></tr></table></figure>
<p>（cd modules后当出现</p>
<p>Build complete.<br>Don’t forget to run ‘make test’.<br>表示安装成功。）</p>
<p>*</p>
<p>直接安装拓展<br><a href="https://stackoverflow.com/questions/24749950/error-no-available-formula-for-php54-mcrypt-on-mac-os-x-mavericks" target="_blank" rel="external">https://stackoverflow.com/questions/24749950/error-no-available-formula-for-php54-mcrypt-on-mac-os-x-mavericks</a></p>
<p>*</p>
<p>4：打开php.ini</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/php.ini</div></pre></td></tr></table></figure>
<p>添加如下代码：（注意no-debug-non-zts-20121212版本号，如果不清楚可以前往/usr/lib/php/extensions/查看）</p>
<p>extension=/usr/lib/php/extensions/no-debug-non-zts-20121212/mcrypt.so<br>*如果phpize出现如下错误：</p>
<p>grep: /usr/include/php/main/php.h: No such file or directory<br>grep: /usr/include/php/Zend/zend_modules.h: No such file or directory<br>grep: /usr/include/php/Zend/zend_extensions.h: No such file or directory<br>Configuring for:<br>PHP Api Version:<br>Zend Module Api No:<br>Zend Extension Api No:<br>Cannot find autoconf. Please check your autoconf installation and the<br>$PHP_AUTOCONF environment variable. Then, rerun this script.<br>表示需要安装autoconf</p>
<p>*如果make出现如下错误：</p>
<p>/ext/mcrypt/mcrypt.c:25:10: fatal error: ‘php.h’ file not found<br>执行如下命令即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include /usr/include</div></pre></td></tr></table></figure>
<p><em>注意MacOSX10.10.sdk修改为自己系统的版本号</em></p>
<p>如果遇到<br>Configuring for:<br>PHP Api Version:         20121113<br>Zend Module Api No:      20121212<br>Zend Extension Api No:   220121212<br>Cannot find autoconf. Please check your autoconf installation and the<br>$PHP_AUTOCONF environment variable. Then, rerun this script.</p>
<p>参考:<a href="https://stackoverflow.com/questions/31583646/cannot-find-autoconf-please-check-your-autoconf-installation-xampp-in-centos" target="_blank" rel="external">https://stackoverflow.com/questions/31583646/cannot-find-autoconf-please-check-your-autoconf-installation-xampp-in-centos</a></p>
<p>For CentOS:</p>
<blockquote>
<h1 id="yum-install-autoconf"><a href="#yum-install-autoconf" class="headerlink" title="yum install autoconf"></a>yum install autoconf</h1></blockquote>
<p>for Ubuntu :</p>
<blockquote>
<h1 id="apt-get-install-autoconf"><a href="#apt-get-install-autoconf" class="headerlink" title="apt-get install autoconf"></a>apt-get install autoconf</h1></blockquote>
<p>for fedora 24-27:</p>
<blockquote>
<h1 id="dnf-install-autoconf"><a href="#dnf-install-autoconf" class="headerlink" title="dnf install autoconf"></a>dnf install autoconf</h1></blockquote>
<p>For Mac</p>
<blockquote>
<p>brew install autoconf</p>
</blockquote>
<p>对于Mac系统遇到 /etc/权限问题</p>
<p>参考:<a href="https://apple.stackexchange.com/questions/208815/error-configuring-mcrypt-after-upgrading-to-el-capitan" target="_blank" rel="external">https://apple.stackexchange.com/questions/208815/error-configuring-mcrypt-after-upgrading-to-el-capitan</a></p>
<p>我们可以安装到另外的地方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo make EXTENSION_DIR=&apos;/usr/local/lib/php/extensions&apos; install</div></pre></td></tr></table></figure></p>
<h3 id="更多Mac的安全策略"><a href="#更多Mac的安全策略" class="headerlink" title="更多Mac的安全策略"></a>更多Mac的安全策略</h3><p>在最新的OSX中限制用户访问某些系统目录<br><a href="https://developer.apple.com/library/content/documentation/Security/Conceptual/System_Integrity_Protection_Guide/Introduction/Introduction.html" target="_blank" rel="external">https://developer.apple.com/library/content/documentation/Security/Conceptual/System_Integrity_Protection_Guide/Introduction/Introduction.html</a></p>
<p>无法访问的地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/bin</div><div class="line">/sbin</div><div class="line">/usr</div><div class="line">/System</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/usr/local</div><div class="line">/Applications</div><div class="line">/Library</div><div class="line">~/Library</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> php </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CakePHP 脚手架和命令行工具]]></title>
      <url>/php/cakephp%20scaffold/</url>
      <content type="html"><![CDATA[<p>CakePHP提供了一个bake命令行工具,提供了一套代码创建命令行工具,可以根据数据库创建模型和控制器视图等。</p>
]]></content>
      
        <categories>
            
            <category> php </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP 包管理工具]]></title>
      <url>/PHP/PHP%20package%20manager/</url>
      <content type="html"><![CDATA[<p>PHP中可以使用的包管理工具为 composer<br>官网:<a href="https://getcomposer.org" target="_blank" rel="external">https://getcomposer.org</a></p>
<p>安装:<a href="https://getcomposer.org/download/" target="_blank" rel="external">https://getcomposer.org/download/</a></p>
<p>安装composer</p>
<blockquote>
<p>php -r “copy(‘<a href="https://getcomposer.org/installer" target="_blank" rel="external">https://getcomposer.org/installer</a>‘, ‘composer-setup.php’);”</p>
<p>php -r “if (hash_file(‘SHA384’, ‘composer-setup.php’) === ‘669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410’) { echo ‘Installer verified’; } else { echo ‘Installer corrupt’; unlink(‘composer-setup.php’); } echo PHP_EOL;”</p>
<p>php composer-setup.php</p>
<p>php -r “unlink(‘composer-setup.php’);”</p>
</blockquote>
<p>浏览PHP包:</p>
<p><a href="http://packagist.org" target="_blank" rel="external">http://packagist.org</a></p>
<p>使用composer</p>
<p>在工作目录下添加composer.json</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;name&quot;: &quot;cakephp-boilerplate&quot;,</div><div class="line">    &quot;require&quot;: &#123;</div><div class="line">        &quot;cakephp/cakephp&quot;: &quot;2.9.*&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;config&quot;: &#123;</div><div class="line">        &quot;vendor-dir&quot;: &quot;Vendor/&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>php composer.phar install</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CakePHP 资源收集]]></title>
      <url>/php/cakephp%20resource/</url>
      <content type="html"><![CDATA[<p>akePHP is a rapid development framework for PHP which uses commonly known design patterns like Active Record, Association Data Mapping, Front Controller and MVC. Our primary goal is to provide a structured framework that enables PHP users at all levels to rapidly develop robust web applications, without any loss to flexibility.</p>
<p>The Cake Software Foundation - promoting development related to CakePHP<br><a href="http://cakefoundation.org/" target="_blank" rel="external">http://cakefoundation.org/</a></p>
<p>CakePHP - the rapid development PHP framework<br><a href="http://www.cakephp.org" target="_blank" rel="external">http://www.cakephp.org</a></p>
<p>Cookbook - user documentation for learning about CakePHP<br><a href="http://book.cakephp.org" target="_blank" rel="external">http://book.cakephp.org</a></p>
<p>API - quick reference to CakePHP<br><a href="http://api.cakephp.org" target="_blank" rel="external">http://api.cakephp.org</a></p>
<p>The Bakery - everything CakePHP<br><a href="http://bakery.cakephp.org" target="_blank" rel="external">http://bakery.cakephp.org</a></p>
<p>The Show - live and archived podcasts about CakePHP and more<br><a href="http://live.cakephp.org" target="_blank" rel="external">http://live.cakephp.org</a></p>
<p>CakePHP TV - screen casts from events and video tutorials<br><a href="http://tv.cakephp.org" target="_blank" rel="external">http://tv.cakephp.org</a></p>
<p>CakePHP Google Group - community mailing list and forum<br><a href="http://groups.google.com/group/cake-php" target="_blank" rel="external">http://groups.google.com/group/cake-php</a></p>
<p>#cakephp on irc.freenode.net - chat with CakePHP developers<br>irc://irc.freenode.net/cakephp</p>
]]></content>
      
        <categories>
            
            <category> php </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[React 资源收集]]></title>
      <url>/React/React%20recource/</url>
      <content type="html"><![CDATA[<p>React js 后端界面<br><a href="https://marmelab.com/admin-on-rest/Admin.html" target="_blank" rel="external">https://marmelab.com/admin-on-rest/Admin.html</a></p>
<p>React 测试工具</p>
<p><a href="https://github.com/airbnb/enzyme" target="_blank" rel="external">https://github.com/airbnb/enzyme</a></p>
<p>React 状态管理库</p>
<p><a href="https://github.com/reactjs/react-redux" target="_blank" rel="external">https://github.com/reactjs/react-redux</a></p>
<p>React 脚手架</p>
<p><a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="external">https://github.com/facebookincubator/create-react-app</a></p>
<p>React 组件库(无UI)</p>
<p>rc-*</p>
<p><a href="http://react-component.github.io/badgeboard/" target="_blank" rel="external">http://react-component.github.io/badgeboard/</a></p>
<p>Here is a list of react-component: <a href="http://react-component.github.io/badgeboard/" target="_blank" rel="external">http://react-component.github.io/badgeboard/</a></p>
<p>React component documentation tool story book</p>
<p><a href="https://github.com/storybooks/storybook" target="_blank" rel="external">https://github.com/storybooks/storybook</a></p>
<p>React UI和组件库</p>
<ul>
<li><a href="https://ant.design/" target="_blank" rel="external">https://ant.design/</a></li>
<li><a href="http://amazeui.org/" target="_blank" rel="external">http://amazeui.org/</a></li>
<li><a href="https://onsen.io/react/" target="_blank" rel="external">https://onsen.io/react/</a></li>
</ul>
<p>React boilerplate</p>
]]></content>
      
        <categories>
            
            <category> React </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[React Native 资源收集]]></title>
      <url>/React-Native/React%20native%20resource/</url>
      <content type="html"><![CDATA[<p>官网</p>
<p><a href="https://facebook.github.io/react-native/" target="_blank" rel="external">https://facebook.github.io/react-native/</a></p>
<p>React Native 开发工具</p>
<p><a href="https://expo.io/" target="_blank" rel="external">https://expo.io/</a></p>
<p>React Native 组件</p>
<p><a href="https://react-native-training.github.io/react-native-elements/" target="_blank" rel="external">https://react-native-training.github.io/react-native-elements/</a></p>
<p>React Native 脚手架</p>
<p><a href="https://github.com/react-community/create-react-native-app" target="_blank" rel="external">https://github.com/react-community/create-react-native-app</a></p>
<p>React Native 项目案例</p>
<ul>
<li>CNode,推荐学习 <a href="https://github.com/soliury/noder-react-native" target="_blank" rel="external">https://github.com/soliury/noder-react-native</a></li>
</ul>
<p>React Native boilerplate</p>
<p><a href="https://github.com/linksgo2011/react-native-ts-most" target="_blank" rel="external">https://github.com/linksgo2011/react-native-ts-most</a></p>
<p>React Native project deployment</p>
]]></content>
      
        <categories>
            
            <category> React Native </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[免费的CI/CD 工具]]></title>
      <url>/CI/engineered/CI-free-tools/</url>
      <content type="html"><![CDATA[<h3 id="为什么要使用CI"><a href="#为什么要使用CI" class="headerlink" title="为什么要使用CI?"></a>为什么要使用CI?</h3><p>方便集成发布和包管理,举个例子就是在Merge PR之前运行测试,如果测试没有通过,不允许合并代码。</p>
<h3 id="能和Github集成的CI工具"><a href="#能和Github集成的CI工具" class="headerlink" title="能和Github集成的CI工具"></a>能和Github集成的CI工具</h3><p><a href="https://github.com/marketplace/category/continuous-integration" target="_blank" rel="external">https://github.com/marketplace/category/continuous-integration</a></p>
<p>Travis CI<br>CircleCI 推荐使用</p>
<h3 id="Github-flow"><a href="#Github-flow" class="headerlink" title="Github flow"></a>Github flow</h3><p>关键点</p>
<ul>
<li>代码质量</li>
<li>代码安全扫描</li>
<li>报警</li>
<li>包管理</li>
<li>自动部署和发布</li>
<li>代码审查</li>
</ul>
<p><a href="https://help.github.com/articles/github-flow/" target="_blank" rel="external">https://help.github.com/articles/github-flow/</a></p>
<p>使用github开发步骤</p>
<ul>
<li>Create a branch from the repository.</li>
<li>Create, edit, rename, move, or delete files.</li>
<li>Send a pull request from your branch with your proposed changes to kick off a discussion.</li>
<li>Make changes on your branch as needed. Your pull request will update automatically.</li>
<li>Merge the pull request once the branch is ready to be merged.</li>
<li>Tidy up your branches using the delete button in the pull request or on the branches page.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> CI </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[React router 登录验证方案]]></title>
      <url>/react/React+Redux+React%20router%20authentication/</url>
      <content type="html"><![CDATA[<p>使用 react 高阶函数<br><a href="https://github.com/joshgeller/react-redux-jwt-auth-example" target="_blank" rel="external">https://github.com/joshgeller/react-redux-jwt-auth-example</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">router.js</div><div class="line"></div><div class="line">import &#123;HomeView, LoginView, ProtectedView&#125; from &apos;../views&apos;;</div><div class="line">import &#123;requireAuthentication&#125; from &apos;../components/AuthenticatedComponent&apos;;</div><div class="line"></div><div class="line">export default(</div><div class="line">    &lt;Route path=&apos;/&apos; component=&#123;App&#125;&gt;</div><div class="line">        &lt;IndexRoute component=&#123;HomeView&#125;/&gt;</div><div class="line">        &lt;Route path=&quot;login&quot; component=&#123;LoginView&#125;/&gt;</div><div class="line">        &lt;Route path=&quot;protected&quot; component=&#123;requireAuthentication(ProtectedView)&#125;/&gt;</div><div class="line">    &lt;/Route&gt;</div><div class="line">);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">import React from &apos;react&apos;;</div><div class="line">import &#123;connect&#125; from &apos;react-redux&apos;;</div><div class="line">import &#123;pushState&#125; from &apos;redux-router&apos;;</div><div class="line"></div><div class="line">export function requireAuthentication(Component) &#123;</div><div class="line"></div><div class="line">    class AuthenticatedComponent extends React.Component &#123;</div><div class="line"></div><div class="line">        componentWillMount() &#123;</div><div class="line">            this.checkAuth();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        componentWillReceiveProps(nextProps) &#123;</div><div class="line">            this.checkAuth();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        checkAuth() &#123;</div><div class="line">            if (!this.props.isAuthenticated) &#123;</div><div class="line">                let redirectAfterLogin = this.props.location.pathname;</div><div class="line">                this.props.dispatch(pushState(null, `/login?next=$&#123;redirectAfterLogin&#125;`));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        render() &#123;</div><div class="line">            return (</div><div class="line">                &lt;div&gt;</div><div class="line">                    &#123;this.props.isAuthenticated === true</div><div class="line">                        ? &lt;Component &#123;...this.props&#125;/&gt;</div><div class="line">                        : null</div><div class="line">                    &#125;</div><div class="line">                &lt;/div&gt;</div><div class="line">            )</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    const mapStateToProps = (state) =&gt; (&#123;</div><div class="line">        token: state.auth.token,</div><div class="line">        userName: state.auth.userName,</div><div class="line">        isAuthenticated: state.auth.isAuthenticated</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    return connect(mapStateToProps)(AuthenticatedComponent);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> react </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Typescripts 基础知识]]></title>
      <url>/javascript/Type%20scripts/</url>
      <content type="html"><![CDATA[<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>官网: <a href="http://www.typescriptlang.org/" target="_blank" rel="external">http://www.typescriptlang.org/</a><br>中文网: <a href="https://www.tslang.cn" target="_blank" rel="external">https://www.tslang.cn</a></p>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[React 答疑]]></title>
      <url>/react/React%20QAs/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> react </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[最实用的Linux命令]]></title>
      <url>/devops/devops/%E6%9C%80%E5%AE%9E%E7%94%A8%E7%9A%84linux%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>查看操作系统信息</p>
<blockquote>
<p>head -n 1 /etc/issue</p>
</blockquote>
<p>install JDK8 in ubuntu 14.04</p>
<p>Add the webupd8 ppa, and install from that -</p>
<blockquote>
<p>sudo add-apt-repository ppa:webupd8team/java</p>
<p>sudo apt-get update</p>
<p>sudo apt-get install oracle-java8-installer</p>
</blockquote>
<p>Then</p>
<blockquote>
<p>java -version</p>
</blockquote>
<p>should show you using Oracle Java 8. If not, or if you want to use a different version - run update-java-alternatives with something like,</p>
<blockquote>
<p>sudo update-java-alternatives -s java-8-oracle</p>
</blockquote>
<p>or</p>
<blockquote>
<p>sudo update-java-alternatives -s java-7-oracle</p>
</blockquote>
<p>As appropriate.</p>
<p>Got the error: apt-get-repository Command is Missing</p>
<p>fixed by</p>
<blockquote>
<p>sudo apt-get update</p>
<p>sudo apt-get install software-properties-common</p>
</blockquote>
<p><a href="https://stackoverflow.com/questions/25549492/install-jdk8-in-ubuntu-14-04" target="_blank" rel="external">https://stackoverflow.com/questions/25549492/install-jdk8-in-ubuntu-14-04</a></p>
<p>打包备份</p>
<blockquote>
<p>tar -zcvf “jiaonuobg<em>assets</em>$(date “+%Y%m%d”).tar.gz” jiaonuobg/assets</p>
</blockquote>
<p>备份nodejs+mysql项目</p>
<p>TBC</p>
<p>Maven wrapper 生成</p>
<blockquote>
<p>mvn -N io.takari:maven:wrapper</p>
</blockquote>
<p>根据端口查询Linux PID</p>
<blockquote>
<p>netstat -apn | grap $port</p>
</blockquote>
<p>从字符串中提取数字，例如PID</p>
<blockquote>
<p>output=$( netstat -apn | grep 8086 | grep LISTEN) &amp;&amp; read num1 num2 num3 num4 num5  &lt;&lt;&lt;${output//[^0-9]/ }<br>echo $num5</p>
</blockquote>
<p>让进程在后台执行</p>
<blockquote>
<p>java -jar package.jar &amp;</p>
</blockquote>
<p>执行一段Linux命令并给变量赋值</p>
<blockquote>
<p>output=$(netstat -apn | grep 8086 | sed ‘s/[0-9]*//g’)<br>echo $output</p>
</blockquote>
<p>查看服务器内存用量</p>
<blockquote>
<p>sudo free</p>
</blockquote>
<p>查看服务器磁盘用量</p>
<blockquote>
<p>sudo df -h</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> devops </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[语义化版本管理]]></title>
      <url>/se/semantic-version/</url>
      <content type="html"><![CDATA[<h2 id="background"><a href="#background" class="headerlink" title="background"></a>background</h2><p>如果不是在一个非常规范的公司,有时候甚至没有软件发布包版本管理这件事,对于很多语言来说,并没有提供包管理的相关特性,比如PHP,从事PHP多年,但是我们再发布的时候流程并不是非常规范。版本之间的依赖也比较混乱,于是有人提出了语义化版本管理的规范</p>
<p><strong>资料来源</strong></p>
<p>网站: <a href="http://semver.org/lang/zh-CN/" target="_blank" rel="external">http://semver.org/lang/zh-CN/</a><br>Github: <a href="https://github.com/mojombo/semver" target="_blank" rel="external">https://github.com/mojombo/semver</a></p>
<p><strong>一些工具检查或生成</strong></p>
<ul>
<li>semantic-release - <a href="https://github.com/semantic-release/semantic-release" target="_blank" rel="external">https://github.com/semantic-release/semantic-release</a></li>
</ul>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Given a version number MAJOR.MINOR.PATCH, increment the:</p>
<ol>
<li>MAJOR version when you make incompatible API changes,</li>
<li>MINOR version when you add functionality in a backwards-compatible<br>manner, and</li>
<li>PATCH version when you make backwards-compatible bug fixes.</li>
</ol>
<p>Additional labels for pre-release and build metadata are available as extensions<br>to the MAJOR.MINOR.PATCH format.</p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>In the world of software management there exists a dreaded place called<br>“dependency hell.” The bigger your system grows and the more packages you<br>integrate into your software, the more likely you are to find yourself, one<br>day, in this pit of despair.</p>
<p>In systems with many dependencies, releasing new package versions can quickly<br>become a nightmare. If the dependency specifications are too tight, you are in<br>danger of version lock (the inability to upgrade a package without having to<br>release new versions of every dependent package). If dependencies are<br>specified too loosely, you will inevitably be bitten by version promiscuity<br>(assuming compatibility with more future versions than is reasonable).<br>Dependency hell is where you are when version lock and/or version promiscuity<br>prevent you from easily and safely moving your project forward.</p>
<p>As a solution to this problem, I propose a simple set of rules and<br>requirements that dictate how version numbers are assigned and incremented.<br>These rules are based on but not necessarily limited to pre-existing<br>widespread common practices in use in both closed and open-source software.<br>For this system to work, you first need to declare a public API. This may<br>consist of documentation or be enforced by the code itself. Regardless, it is<br>important that this API be clear and precise. Once you identify your public<br>API, you communicate changes to it with specific increments to your version<br>number. Consider a version format of X.Y.Z (Major.Minor.Patch). Bug fixes not<br>affecting the API increment the patch version, backwards compatible API<br>additions/changes increment the minor version, and backwards incompatible API<br>changes increment the major version.</p>
<p>I call this system “Semantic Versioning.” Under this scheme, version numbers<br>and the way they change convey meaning about the underlying code and what has<br>been modified from one version to the next.</p>
<h2 id="Semantic-Versioning-Specification-SemVer"><a href="#Semantic-Versioning-Specification-SemVer" class="headerlink" title="Semantic Versioning Specification (SemVer)"></a>Semantic Versioning Specification (SemVer)</h2><p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,<br>“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be<br>interpreted as described in <a href="http://tools.ietf.org/html/rfc2119" target="_blank" rel="external">RFC 2119</a>.</p>
<ol>
<li><p>Software using Semantic Versioning MUST declare a public API. This API<br>could be declared in the code itself or exist strictly in documentation.<br>However it is done, it SHOULD be precise and comprehensive.</p>
</li>
<li><p>A normal version number MUST take the form X.Y.Z where X, Y, and Z are<br>non-negative integers, and MUST NOT contain leading zeroes. X is the<br>major version, Y is the minor version, and Z is the patch version.<br>Each element MUST increase numerically. For instance: 1.9.0 -&gt; 1.10.0 -&gt; 1.11.0.</p>
</li>
<li><p>Once a versioned package has been released, the contents of that version<br>MUST NOT be modified. Any modifications MUST be released as a new version.</p>
</li>
<li><p>Major version zero (0.y.z) is for initial development. Anything MAY change<br>at any time. The public API SHOULD NOT be considered stable.</p>
</li>
<li><p>Version 1.0.0 defines the public API. The way in which the version number<br>is incremented after this release is dependent on this public API and how it<br>changes.</p>
</li>
<li><p>Patch version Z (x.y.Z | x &gt; 0) MUST be incremented if only backwards<br>compatible bug fixes are introduced. A bug fix is defined as an internal<br>change that fixes incorrect behavior.</p>
</li>
<li><p>Minor version Y (x.Y.z | x &gt; 0) MUST be incremented if new, backwards<br>compatible functionality is introduced to the public API. It MUST be<br>incremented if any public API functionality is marked as deprecated. It MAY be<br>incremented if substantial new functionality or improvements are introduced<br>within the private code. It MAY include patch level changes. Patch version<br>MUST be reset to 0 when minor version is incremented.</p>
</li>
<li><p>Major version X (X.y.z | X &gt; 0) MUST be incremented if any backwards<br>incompatible changes are introduced to the public API. It MAY also include minor<br>and patch level changes. Patch and minor version MUST be reset to 0 when major<br>version is incremented.</p>
</li>
<li><p>A pre-release version MAY be denoted by appending a hyphen and a<br>series of dot separated identifiers immediately following the patch<br>version. Identifiers MUST comprise only ASCII alphanumerics and hyphen<br>[0-9A-Za-z-]. Identifiers MUST NOT be empty. Numeric identifiers MUST<br>NOT include leading zeroes. Pre-release versions have a lower<br>precedence than the associated normal version. A pre-release version<br>indicates that the version is unstable and might not satisfy the<br>intended compatibility requirements as denoted by its associated<br>normal version. Examples: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7,<br>1.0.0-x.7.z.92.</p>
</li>
<li><p>Build metadata MAY be denoted by appending a plus sign and a series of dot<br>separated identifiers immediately following the patch or pre-release version.<br>Identifiers MUST comprise only ASCII alphanumerics and hyphen [0-9A-Za-z-].<br>Identifiers MUST NOT be empty. Build metadata MUST be ignored when determining<br>version precedence. Thus two versions that differ only in the build metadata,<br>have the same precedence. Examples: 1.0.0-alpha+001, 1.0.0+20130313144700,<br>1.0.0-beta+exp.sha.5114f85.</p>
</li>
<li><p>Precedence refers to how versions are compared to each other when ordered.<br>Precedence MUST be calculated by separating the version into major, minor, patch<br>and pre-release identifiers in that order (Build metadata does not figure<br>into precedence). Precedence is determined by the first difference when<br>comparing each of these identifiers from left to right as follows: Major, minor,<br>and patch versions are always compared numerically. Example: 1.0.0 &lt; 2.0.0 &lt;<br>2.1.0 &lt; 2.1.1. When major, minor, and patch are equal, a pre-release version has<br>lower precedence than a normal version. Example: 1.0.0-alpha &lt; 1.0.0. Precedence<br>for two pre-release versions with the same major, minor, and patch version MUST<br>be determined by comparing each dot separated identifier from left to right<br>until a difference is found as follows: identifiers consisting of only digits<br>are compared numerically and identifiers with letters or hyphens are compared<br>lexically in ASCII sort order. Numeric identifiers always have lower precedence<br>than non-numeric identifiers. A larger set of pre-release fields has a higher<br>precedence than a smaller set, if all of the preceding identifiers are equal.<br>Example: 1.0.0-alpha &lt; 1.0.0-alpha.1 &lt; 1.0.0-alpha.beta &lt; 1.0.0-beta &lt;<br>1.0.0-beta.2 &lt; 1.0.0-beta.11 &lt; 1.0.0-rc.1 &lt; 1.0.0.</p>
</li>
</ol>
<h2 id="Why-Use-Semantic-Versioning"><a href="#Why-Use-Semantic-Versioning" class="headerlink" title="Why Use Semantic Versioning?"></a>Why Use Semantic Versioning?</h2><p>This is not a new or revolutionary idea. In fact, you probably do something<br>close to this already. The problem is that “close” isn’t good enough. Without<br>compliance to some sort of formal specification, version numbers are<br>essentially useless for dependency management. By giving a name and clear<br>definition to the above ideas, it becomes easy to communicate your intentions<br>to the users of your software. Once these intentions are clear, flexible (but<br>not too flexible) dependency specifications can finally be made.</p>
<p>A simple example will demonstrate how Semantic Versioning can make dependency<br>hell a thing of the past. Consider a library called “Firetruck.” It requires a<br>Semantically Versioned package named “Ladder.” At the time that Firetruck is<br>created, Ladder is at version 3.1.0. Since Firetruck uses some functionality<br>that was first introduced in 3.1.0, you can safely specify the Ladder<br>dependency as greater than or equal to 3.1.0 but less than 4.0.0. Now, when<br>Ladder version 3.1.1 and 3.2.0 become available, you can release them to your<br>package management system and know that they will be compatible with existing<br>dependent software.</p>
<p>As a responsible developer you will, of course, want to verify that any<br>package upgrades function as advertised. The real world is a messy place;<br>there’s nothing we can do about that but be vigilant. What you can do is let<br>Semantic Versioning provide you with a sane way to release and upgrade<br>packages without having to roll new versions of dependent packages, saving you<br>time and hassle.</p>
<p>If all of this sounds desirable, all you need to do to start using Semantic<br>Versioning is to declare that you are doing so and then follow the rules. Link<br>to this website from your README so others know the rules and can benefit from<br>them.</p>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="How-should-I-deal-with-revisions-in-the-0-y-z-initial-development-phase"><a href="#How-should-I-deal-with-revisions-in-the-0-y-z-initial-development-phase" class="headerlink" title="How should I deal with revisions in the 0.y.z initial development phase?"></a>How should I deal with revisions in the 0.y.z initial development phase?</h3><p>The simplest thing to do is start your initial development release at 0.1.0<br>and then increment the minor version for each subsequent release.</p>
<h3 id="How-do-I-know-when-to-release-1-0-0"><a href="#How-do-I-know-when-to-release-1-0-0" class="headerlink" title="How do I know when to release 1.0.0?"></a>How do I know when to release 1.0.0?</h3><p>If your software is being used in production, it should probably already be<br>1.0.0. If you have a stable API on which users have come to depend, you should<br>be 1.0.0. If you’re worrying a lot about backwards compatibility, you should<br>probably already be 1.0.0.</p>
<h3 id="Doesn’t-this-discourage-rapid-development-and-fast-iteration"><a href="#Doesn’t-this-discourage-rapid-development-and-fast-iteration" class="headerlink" title="Doesn’t this discourage rapid development and fast iteration?"></a>Doesn’t this discourage rapid development and fast iteration?</h3><p>Major version zero is all about rapid development. If you’re changing the API<br>every day you should either still be in version 0.y.z or on a separate<br>development branch working on the next major version.</p>
<h3 id="If-even-the-tiniest-backwards-incompatible-changes-to-the-public-API-require-a-major-version-bump-won’t-I-end-up-at-version-42-0-0-very-rapidly"><a href="#If-even-the-tiniest-backwards-incompatible-changes-to-the-public-API-require-a-major-version-bump-won’t-I-end-up-at-version-42-0-0-very-rapidly" class="headerlink" title="If even the tiniest backwards incompatible changes to the public API require a major version bump, won’t I end up at version 42.0.0 very rapidly?"></a>If even the tiniest backwards incompatible changes to the public API require a major version bump, won’t I end up at version 42.0.0 very rapidly?</h3><p>This is a question of responsible development and foresight. Incompatible<br>changes should not be introduced lightly to software that has a lot of<br>dependent code. The cost that must be incurred to upgrade can be significant.<br>Having to bump major versions to release incompatible changes means you’ll<br>think through the impact of your changes, and evaluate the cost/benefit ratio<br>involved.</p>
<h3 id="Documenting-the-entire-public-API-is-too-much-work"><a href="#Documenting-the-entire-public-API-is-too-much-work" class="headerlink" title="Documenting the entire public API is too much work!"></a>Documenting the entire public API is too much work!</h3><p>It is your responsibility as a professional developer to properly document<br>software that is intended for use by others. Managing software complexity is a<br>hugely important part of keeping a project efficient, and that’s hard to do if<br>nobody knows how to use your software, or what methods are safe to call. In<br>the long run, Semantic Versioning, and the insistence on a well defined public<br>API can keep everyone and everything running smoothly.</p>
<h3 id="What-do-I-do-if-I-accidentally-release-a-backwards-incompatible-change-as-a-minor-version"><a href="#What-do-I-do-if-I-accidentally-release-a-backwards-incompatible-change-as-a-minor-version" class="headerlink" title="What do I do if I accidentally release a backwards incompatible change as a minor version?"></a>What do I do if I accidentally release a backwards incompatible change as a minor version?</h3><p>As soon as you realize that you’ve broken the Semantic Versioning spec, fix<br>the problem and release a new minor version that corrects the problem and<br>restores backwards compatibility. Even under this circumstance, it is<br>unacceptable to modify versioned releases. If it’s appropriate,<br>document the offending version and inform your users of the problem so that<br>they are aware of the offending version.</p>
<h3 id="What-should-I-do-if-I-update-my-own-dependencies-without-changing-the-public-API"><a href="#What-should-I-do-if-I-update-my-own-dependencies-without-changing-the-public-API" class="headerlink" title="What should I do if I update my own dependencies without changing the public API?"></a>What should I do if I update my own dependencies without changing the public API?</h3><p>That would be considered compatible since it does not affect the public API.<br>Software that explicitly depends on the same dependencies as your package<br>should have their own dependency specifications and the author will notice any<br>conflicts. Determining whether the change is a patch level or minor level<br>modification depends on whether you updated your dependencies in order to fix<br>a bug or introduce new functionality. I would usually expect additional code<br>for the latter instance, in which case it’s obviously a minor level increment.</p>
<h3 id="What-if-I-inadvertently-alter-the-public-API-in-a-way-that-is-not-compliant-with-the-version-number-change-i-e-the-code-incorrectly-introduces-a-major-breaking-change-in-a-patch-release"><a href="#What-if-I-inadvertently-alter-the-public-API-in-a-way-that-is-not-compliant-with-the-version-number-change-i-e-the-code-incorrectly-introduces-a-major-breaking-change-in-a-patch-release" class="headerlink" title="What if I inadvertently alter the public API in a way that is not compliant with the version number change (i.e. the code incorrectly introduces a major breaking change in a patch release)?"></a>What if I inadvertently alter the public API in a way that is not compliant with the version number change (i.e. the code incorrectly introduces a major breaking change in a patch release)?</h3><p>Use your best judgment. If you have a huge audience that will be drastically<br>impacted by changing the behavior back to what the public API intended, then<br>it may be best to perform a major version release, even though the fix could<br>strictly be considered a patch release. Remember, Semantic Versioning is all<br>about conveying meaning by how the version number changes. If these changes<br>are important to your users, use the version number to inform them.</p>
<h3 id="How-should-I-handle-deprecating-functionality"><a href="#How-should-I-handle-deprecating-functionality" class="headerlink" title="How should I handle deprecating functionality?"></a>How should I handle deprecating functionality?</h3><p>Deprecating existing functionality is a normal part of software development and<br>is often required to make forward progress. When you deprecate part of your<br>public API, you should do two things: (1) update your documentation to let<br>users know about the change, (2) issue a new minor release with the deprecation<br>in place. Before you completely remove the functionality in a new major release<br>there should be at least one minor release that contains the deprecation so<br>that users can smoothly transition to the new API.</p>
<h3 id="Does-SemVer-have-a-size-limit-on-the-version-string"><a href="#Does-SemVer-have-a-size-limit-on-the-version-string" class="headerlink" title="Does SemVer have a size limit on the version string?"></a>Does SemVer have a size limit on the version string?</h3><p>No, but use good judgment. A 255 character version string is probably overkill,<br>for example. Also, specific systems may impose their own limits on the size of<br>the string.</p>
<h3 id="Is-“v1-2-3”-a-semantic-version"><a href="#Is-“v1-2-3”-a-semantic-version" class="headerlink" title="Is “v1.2.3” a semantic version?"></a>Is “v1.2.3” a semantic version?</h3><p>No, “v1.2.3” is not a semantic version. However, prefixing a semantic version<br>with a “v” is a common way (in English) to indicate it is a version number.<br>Abbreviating “version” as “v” is often seen with version control. Example:<br><code>git tag v1.2.3 -m &quot;Release version 1.2.3&quot;</code>, in which case “v1.2.3” is a tag<br>name and the semantic version is “1.2.3”.</p>
<h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>The Semantic Versioning specification is authored by <a href="http://tom.preston-werner.com" target="_blank" rel="external">Tom<br>Preston-Werner</a>, inventor of Gravatar and<br>cofounder of GitHub.</p>
<p>If you’d like to leave feedback, please <a href="https://github.com/mojombo/semver/issues" target="_blank" rel="external">open an issue on<br>GitHub</a>.</p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Creative Commons - CC BY 3.0<br><a href="http://creativecommons.org/licenses/by/3.0/" target="_blank" rel="external">http://creativecommons.org/licenses/by/3.0/</a></p>
]]></content>
      
        <categories>
            
            <category> se </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP拓展和使用C编写自定义拓展]]></title>
      <url>/C-C/php-plugin-c/</url>
      <content type="html"><![CDATA[<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>PHP的一个拓展方法就是使用C来编写PHP插件,可以带来极大的性能提升和实现系统层面的拓展。推荐使用C来编写,但是C++特性更为丰富并且有大量的库来支持我们的任务,因此C++也是更好的选择。</p>
<h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><ul>
<li>PHP 源码解读和插件编写基本知识 <a href="http://www.php-internals.com/" target="_blank" rel="external">http://www.php-internals.com/</a></li>
<li>C++库用于简化插件编写 <a href="https://github.com/rioderelfte/php-cpp-extension" target="_blank" rel="external">https://github.com/rioderelfte/php-cpp-extension</a></li>
<li>V8引擎插件 <a href="https://github.com/phpv8/v8js" target="_blank" rel="external">https://github.com/phpv8/v8js</a></li>
<li>基于php-cpp的Qr code插件 <a href="https://github.com/Leon2012/phpqrencode" target="_blank" rel="external">https://github.com/Leon2012/phpqrencode</a></li>
<li>PHP MVC框架的拓展实现 <a href="https://github.com/phalcon/cphalcon" target="_blank" rel="external">https://github.com/phalcon/cphalcon</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> C/C++ </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CSP 浏览器内存安全策略]]></title>
      <url>/security/security/csp-in-browser/</url>
      <content type="html"><![CDATA[<h2 id="什么是CSP"><a href="#什么是CSP" class="headerlink" title="什么是CSP?"></a>什么是CSP?</h2><p>这里一段定义是来自于MDN社区</p>
<blockquote>
<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</p>
</blockquote>
<p>内容安全策略(CSP)是一种web应用技术用于帮助缓解大部分类型的内容注入攻击，包括XSS攻击和数据注入等，这些攻击可实现数据窃取、网站破坏和作为恶意软件分发版本等行为。该策略可让网站管理员指定客户端允许加载的各类可信任资源。</p>
<p>参考来源</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" target="_blank" rel="external">https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP</a></p>
]]></content>
      
        <categories>
            
            <category> security </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP环境in Mac]]></title>
      <url>/php/php-environment-in-mac/</url>
      <content type="html"><![CDATA[<p>实际上Mac系统自带了PHP和Apache的开发环境</p>
<p>1、Apache相关</p>
<p>Mac系统自带apache服务器，我们只需要配置相关信息并进行开启服务即可</p>
<p>sudo vim /etc/apache2/httpd.conf</p>
<p>打开对PHP的支持,第169行左右</p>
<p>LoadModule php5_module libexec/apache2/libphp5.so</p>
<p>2、测试</p>
<p>系统默认会访问／Library/WebServer/Document/index.html.en文件</p>
<p>为了方便测试，在此目录下新建一个test.php文件，并输入</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line">phpinfo();</div><div class="line"></div><div class="line"> <span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>然后访问localhost/test.php，会直接打印出phpinfo中的各种信息</p>
<p>3、PHP配置</p>
<p>在做第二步测试的时候，扩展里面date会出现错误，原因是默认php.ini没有对date.timezone进行设置，系统默认UTC的时区，所以我们要开启对php.ini的设置</p>
<p>sudo cp /etc/php.ini.default php.ini</p>
<p>先把默认配置文件复制一份，然后给复制好的配置文件增加写的权限</p>
<p>sudo chmod +w php.ini</p>
<p>找到date.timezone，先把默认的注释给删除掉，然后直接后面配置成PRC即可</p>
<p>4、测试</p>
<p>再次访问localhost/test.php，date扩展就OK了！</p>
<p>使用自带的Apache</p>
<p>sudo apachectl start</p>
<p>sudo apachectl stop</p>
<p>sudo apachectl restart</p>
]]></content>
      
        <categories>
            
            <category> php </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[超实用的工具和网站收集]]></title>
      <url>/collection/tool-collections/</url>
      <content type="html"><![CDATA[<h2 id="流程图、思维导图"><a href="#流程图、思维导图" class="headerlink" title="流程图、思维导图"></a>流程图、思维导图</h2><p><a href="https://www.processon.com" target="_blank" rel="external">https://www.processon.com</a></p>
<p>可以绘制思维导图、流程图、ER图等</p>
<p><a href="https://coggle.it/" target="_blank" rel="external">https://coggle.it/</a></p>
<p>超漂亮的思维导图工具</p>
<p><img src="/collection/tool-collections/coggle.png" alt=""></p>
<p><a href="http://naotu.baidu.com/" target="_blank" rel="external">http://naotu.baidu.com/</a></p>
<p>百度脑图</p>
<h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><p><a href="https://octodex.github.com/" target="_blank" rel="external">https://octodex.github.com/</a></p>
<p>github章鱼头像</p>
]]></content>
      
        <categories>
            
            <category> collection </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[QA in agile]]></title>
      <url>/qa/test/QA%20in%20agile/</url>
      <content type="html"><![CDATA[<h2 id="常用QA概念"><a href="#常用QA概念" class="headerlink" title="常用QA概念"></a>常用QA概念</h2><p>探索性测试:同时设计测试和执行测试。探索性测试有时候会与即兴测试（ad hoc testing）混淆。即兴测试通常是指临时准备的、即兴的Bug搜索测试过程。从定义可以看出，谁都可以做即兴测试。由Cem Kaner提出的探索性测试，相比即兴测试是一种精致的、有思想的过程。</p>
<p>测试金字塔: unit-&gt;service-&gt;UI, 伴随测试成本投入,收益减少。unit为测试性价比最高的方式<br>冒烟测试: sanity测试,快速验证应用是否能工作。<br>BDD测试: 基于业务的测试思想。<br>E2E测试: 端对端测试。<br>集成测试:<br>Functional: E2E测试。</p>
<h2 id="常用测试工具"><a href="#常用测试工具" class="headerlink" title="常用测试工具"></a>常用测试工具</h2><ul>
<li>selenium 可以驱动浏览器，模拟真实用户<br>-</li>
</ul>
<h2 id="Case-设计"><a href="#Case-设计" class="headerlink" title="Case 设计"></a>Case 设计</h2><p>A test case, is a set of test inputs, execution conditions, and expected results developed for a particular objective, such as to exercise a particular program path or to verify compliance with a specific requirement.</p>
<h3 id="Common-Methods-Black-box"><a href="#Common-Methods-Black-box" class="headerlink" title="Common Methods - Black box"></a>Common Methods - Black box</h3><ul>
<li>Boundary Value Analysis 边界值分析</li>
<li>Equivalence Partitioning 等价划分</li>
<li>Causal Diagram 因果图</li>
<li>Decision Table 判定表</li>
</ul>
<h3 id="Common-Methods-White-box"><a href="#Common-Methods-White-box" class="headerlink" title="Common Methods - White box"></a>Common Methods - White box</h3><ul>
<li>Logical coverage<ul>
<li>statement coverage</li>
<li>Branch coverage</li>
<li>Path coverage</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> qa </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Java 学习教程资源收集]]></title>
      <url>/java/Java%20tutorial%20collection/</url>
      <content type="html"><![CDATA[<h3 id="教程列表"><a href="#教程列表" class="headerlink" title="教程列表"></a>教程列表</h3><p>下列顺序可以作为学习路线图</p>
<ul>
<li>入门教程 <a href="http://www.runoob.com/java/java-tutorial.html" target="_blank" rel="external">http://www.runoob.com/java/java-tutorial.html</a></li>
<li>Servlet <a href="http://www.runoob.com/servlet/servlet-tutorial.html" target="_blank" rel="external">http://www.runoob.com/servlet/servlet-tutorial.html</a></li>
<li>JSP <a href="http://www.runoob.com/jsp/jsp-tutorial.html" target="_blank" rel="external">http://www.runoob.com/jsp/jsp-tutorial.html</a></li>
<li>Spring mvc<ul>
<li>张开涛 <a href="http://jinnianshilongnian.iteye.com/category/231099" target="_blank" rel="external">http://jinnianshilongnian.iteye.com/category/231099</a></li>
<li>传智播客视屏教程</li>
</ul>
</li>
<li><p>Maven <a href="https://www.lynda.com/Maven-tutorials/Multi-Module-Build-Automation-Maven/520530-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3amaven+%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2" target="_blank" rel="external">https://www.lynda.com/Maven-tutorials/Multi-Module-Build-Automation-Maven/520530-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3amaven+%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2</a></p>
</li>
<li><p>Mybatis</p>
</li>
<li>Hibernate</li>
</ul>
<h3 id="其他资料收集"><a href="#其他资料收集" class="headerlink" title="其他资料收集"></a>其他资料收集</h3><ul>
<li>一些Java基础例子 <a href="http://www.runoob.com/java/java-examples.html" target="_blank" rel="external">http://www.runoob.com/java/java-examples.html</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Jeeweb - SpringMVC+Spring+Hibernate 项目模板]]></title>
      <url>/java/Jeeweb%20-%20Java%20boilerplate/</url>
      <content type="html"><![CDATA[<p>JeeWeb是一款基于SpringMVC+Spring+Hibernate的敏捷开发系统, 实际上是一个种子项目,但是用来开发CRUD项目绰绰有余了。</p>
<p>项目地址:<a href="https://www.oschina.net/p/jeeweb" target="_blank" rel="external">https://www.oschina.net/p/jeeweb</a><br>github地址:<a href="https://github.com/white-cat/jeeweb" target="_blank" rel="external">https://github.com/white-cat/jeeweb</a></p>
<p>通过学习这个项目,可以学习Java基本的基本选型和配置。<br>技术选型参考如下:</p>
<h2 id="JeeWeb-功能特点"><a href="#JeeWeb-功能特点" class="headerlink" title="JeeWeb 功能特点"></a>JeeWeb 功能特点</h2><ul>
<li>采用SpringMVC+Spring+Hibernate+Shiro+ Ehcache+Disruptor+Jquery + Boostrap + Ztree等基础前后端架构架构</li>
<li>采用面向声明的开发模式， 基于泛型编写极少代码即可实现复杂的数据展示、数据编辑、表单处理等功能，在不使用代码生成器的情况下，也只需要很少的代码就能实现基础的CURD操作，再配合在线开发与代码生成器的使用，更加加快了开发的进度，将J2EE的开发效率成本提高，可以将代码减少60%以上。</li>
<li>在线开发(通过在线配置实现一个表模型的增删改查功能，无需一行代码，支持用户自定义表单布局)</li>
<li>代码生成器，支持多种数据模型,根据表生成对应的Entity,Service,Dao,Controller,JSP等,增删改查功能生成直接使用</li>
<li>UI标签开发库，针对前端UI进行标准封装表，页面统一采用UI标签实现功能：数据datagrid,treegrid,FileInput,Editor,GridSelect等，实现JSP页面零JS，开发维护简洁高效</li>
<li>查询过滤器：只需前端配置，后台动态拼SQL追加查询条件；支持多种匹配方式（全匹配/模糊查询/包含查询/不匹配查询）</li>
<li>移动平台支持，对Bootstrap(兼容Html5)进行标准封装</li>
<li>国际化（支持多语言，国际化的封装为多语言做了便捷支持）</li>
<li>多数据源（在线配置数据源，数据源工作类封装）</li>
<li>数据权限：整合Shiro权限</li>
<li>计划任务控制（在线配置计划任务、方便计划任务的时间调整规划）</li>
<li>邮件发送（配置邮件模版、邮件帐号的在线配置、邮件异步发送、邮件发送日志功能统计）</li>
<li>短信发送（配置短信模版、短信帐号的在线配置、短信异步发送、短信发送日志功能统计、支持短信发送平台动态切换）</li>
<li>多种首页风格切换,支持自定义首页风格。（Inspinia风格|ACE风格）</li>
<li>数据统计报表：丰富的报表统计功能</li>
<li>支持多种浏览器: Google, 火狐, IE,360 等</li>
<li>支持数据库: Mysql,Oracle10g,SqlServer等</li>
<li>基础权限: 用户，角色，菜单权限</li>
<li>Web容器测试通过的有Jetty和Tomcat,Weblogic</li>
<li>要求JDK1.7+</li>
</ul>
<h1 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h1><p>1、后端</p>
<ul>
<li>核心框架：Spring Framework</li>
<li>安全框架：Apache Shiro</li>
<li>视图框架：Spring MVC</li>
<li>服务端验证：Hibernate Validator</li>
<li>布局框架：SiteMesh</li>
<li>任务调度：Quartz</li>
<li>持久层框架：Hibernate</li>
<li>数据库连接池：Alibaba Druid</li>
<li>缓存框架：Ehcache</li>
<li>并发框架：Disruptor</li>
<li>日志管理：SLF4J、Log4j</li>
<li>工具类：Apache Commons、Jackson、Xstream、</li>
</ul>
<p>2、前端</p>
<ul>
<li>JS框架：jQuery。</li>
<li>CSS框架：Twitter Bootstrap</li>
<li>客户端验证：Validform。</li>
<li>富文本在线编辑：markdown、simditor、Summernote、CodeMirror自由切换</li>
<li>文件上传工具:Bootstrap fileinput</li>
<li>数据表格：jqGrid</li>
<li>对话框：layer</li>
<li>树结构控件：jQuery zTree</li>
<li>日期控件： datepicker</li>
<li>代码高亮： syntaxhighlighter</li>
</ul>
<h2 id="简单使用说明"><a href="#简单使用说明" class="headerlink" title="简单使用说明"></a>简单使用说明</h2><ul>
<li>导入sql/jeeweb-mysql-v1.0.sql文件到mysql数据库</li>
<li>导入项目到Eclipse.</li>
<li>修改数据库配置文件dbconfig.properties中的账号密码.</li>
<li>启动项目,管理员账号admin/密码123456</li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Tips to upgrade the relationship with colleagues]]></title>
      <url>/method/Way%20of%20working%20for%20team%20building/</url>
      <content type="html"><![CDATA[<h3 id="一些tips"><a href="#一些tips" class="headerlink" title="一些tips"></a>一些tips</h3><ul>
<li>关注人的感受, 多表达感谢, 不要直接批评</li>
</ul>
<h3 id="从Thoughtworks学到的"><a href="#从Thoughtworks学到的" class="headerlink" title="从Thoughtworks学到的"></a>从Thoughtworks学到的</h3><ul>
<li><p>Retro 回顾一段时间里的感受,然后在团队里面头脑风暴,使用sticker写出每个人的想法。使用well、less well、suggestion来分类,最后总结出actions。</p>
</li>
<li><p>Feedback meeting 互相给每个人Feedback, 直到Team中每个人都能收到Feedback</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> method </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Handover tips]]></title>
      <url>/method/Way%20of%20working%20for%20handover/</url>
      <content type="html"><![CDATA[<h4 id="What-we-can-do-fo-that"><a href="#What-we-can-do-fo-that" class="headerlink" title="What we can do fo that?"></a>What we can do fo that?</h4><ul>
<li>整理一个清单</li>
<li>建立一个文档去跟踪</li>
<li>安排一些conversation去移交</li>
<li>review 那些东西已经被确认接受</li>
<li>角色对角色, QA、DEV、BA分别处理</li>
<li>定义移交scope</li>
<li>定义deadline</li>
</ul>
]]></content>
      
        <categories>
            
            <category> method </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[AWS Certificate Manager 常见问题]]></title>
      <url>/aws/devops/aws-certificate-manager-faqs/</url>
      <content type="html"><![CDATA[<h3 id="一般性问题"><a href="#一般性问题" class="headerlink" title="一般性问题"></a>一般性问题</h3><p>问：什么是 AWS Certificate Manager (ACM)？</p>
<p>AWS Certificate Manager 是一项服务，可帮助您轻松地预置、管理和部署用于 AWS 服务的安全套接字层/传输层安全性 (SSL/TLS) 证书。SSL/TLS 证书用于保护网络通信的安全并确立网站在 Internet 上的身份。使用 AWS Certificate Manager，您无需再为购买、上传和更新 SSL/TLS 证书而经历耗时的手动流程。利用 AWS Certificate Manager，您可以快速请求证书，在 AWS 资源 (如 Amazon API Gateway 上的 Elastic Load Balancer、Amazon CloudFront 分配或 API) 上部署该证书，并让 AWS Certificate Manager 处理证书更新事宜。通过 AWS Certificate Manager 预置的 SSL/TLS 证书可免费使用。您只需为您创建的用于运行应用程序的 AWS 资源付费。</p>
<p>问：什么是 SSL/TLS 证书？</p>
<p>SSL/TLS 证书使 Web 浏览器能够标识使用安全套接字层/传输层安全性 (SSL/TLS) 协议的网站并与之建立加密的网络连接。证书在名为公有密钥基础设施 (PKI) 的加密系统中使用。通过 PKI，在双方都信任同一个第三方 (称为证书颁发机构) 的情况下，一方可以为使用证书的另一方确立身份。ACM 用户指南、概念和术语提供了其他背景信息和定义。</p>
<p>问：AWS Certificate Manager 有什么作用？</p>
<p>您可以请求并预置 SSL/TLS 证书，然后为使用 Elastic Load Balancing、Amazon CloudFront 或 Amazon API Gateway 的站点和应用程序部署这些证书。验证请求域的所有权并获得颁发的证书之后，您可以从 AWS 管理控制台的下拉列表中选择 SSL/TLS 证书并部署该证书。或者，您也可以使用 AWS 命令行界面 (CLI) 命令或 API 调用将 ACM 提供的证书部署到 AWS 资源。ACM 会为您管理证书更新和证书部署事宜。</p>
<p>问：使用 AWS Certificate Manager 有哪些优势？</p>
<p>借助 ACM，您可以更加轻松地为 AWS 平台上的网站或应用程序启用 SSL/TLS。ACM 免除了过去与使用 SSL/TLS 和管理 SSL/TLS 证书相关的大量手动流程。ACM 还可管理证书更新，从而帮助您避免因证书配置错误、撤销或过期而导致的停机。您可获得 SSL/TLS 保护并轻松管理证书。启用 SSL/TLS 有助于提高站点的搜索排名，并可帮助您满足传输数据加密的法规合规性要求。</p>
<p>当您使用 ACM 时，它会应用强加密和密钥管理最佳实践来确保证书私有密钥的安全。借助 ACM，您可以使用 AWS 管理控制台、AWS CLI 或 AWS Certificate Manager API 集中管理 AWS Certificate Manager 在 AWS 区域内提供的所有 SSL/TLS 证书。AWS Certificate Manager 集成了其他 AWS 服务，因此您可以请求 SSL/TLS 证书，然后通过 AWS 管理控制台、AWS CLI 命令或 API 调用为 Elastic Load Balancing 负载均衡器或 Amazon CloudFront 分配预置证书。</p>
<p>问：如何开始使用 ACM？</p>
<p>要开始使用 AWS Certificate Manager，请导航到 AWS 管理控制台中的“Certificate Manager”，然后使用向导输入站点的名称以请求 SSL/TLS 证书。您也可以使用 AWS CLI 或 API 请求证书。在 ACM 获得域所有者的批准并且系统颁发 SSL/TLS 证书后，您就可以将其用于与 ACM 集成的其他 AWS 资源了。您只需从 AWS 管理控制台的下拉列表中选择您要部署的 SSL/TLS 证书即可。或者，您也可以执行一个 AWS CLI 命令或调用一个 AWS API，将该证书与您的资源关联起来。AWS Certificate Manager 随后会将该证书部署到您选择的资源。有关请求和使用 AWS Certificate Manager 所提供证书的更多信息，请参阅《AWS Certificate Manager 用户指南》中的入门。</p>
<p>问：ACM 提供哪种类型的证书？</p>
<p>ACM 提供域验证 (DV) 证书，供终止 SSL/TLS 的网站和应用程序使用。有关 ACM 提供的证书的更多详细信息，请参阅证书特点。</p>
<p>问：我可以将 ACM 提供的证书用于哪些 AWS 服务？</p>
<p>您可以将 ACM 用于以下 AWS 服务：<br>• Elastic Load Balancing – 请参阅 Elastic Load Balancing 文档<br>• Amazon CloudFront – 请参阅 CloudFront 文档<br>• Amazon API Gateway – 请参阅 API Gateway 文档<br>• AWS Elastic Beanstalk – 请参阅 AWS Elastic Beanstalk 文档<br>问：ACM 提供的证书是否适合政府部门？</p>
<p>ACM 证书可能适合部分政府部门，而并非对所有政府部门均适合。请查看当地法律、规则和法规，以确定某个 ACM 证书是否适合。如有任何疑问，请访问 AWS Support 中心并创建案例。</p>
<p>问：ACM 在哪些区域提供？</p>
<p>请访问 AWS 全球基础设施页面，了解目前提供 AWS 服务的区域。要将 ACM 证书与 Amazon CloudFront 配合使用，您必须在美国东部 (弗吉尼亚北部) 区域申请或导入该证书。该区域内与 CloudFront 分配关联的 ACM 证书将被分发到为该分配配置的所有地理位置。</p>
<p>问：我是否可以在多个 AWS 区域使用同一证书？</p>
<p>这要取决于您目前使用的是 Elastic Load Balancing 还是 Amazon CloudFront。要在不同区域内针对同一站点 (具有相同的完全限定域名 (FQDN) 或 FQDN 集) 将某个证书与 Elastic Load Balancing 配合使用，您需要为计划使用证书的每个区域申请新证书。请注意，还需要针对新区域重新验证证书中的每个名称。要将 ACM 证书与 Amazon CloudFront 配合使用，您必须在美国东部 (弗吉尼亚北部) 区域申请该证书。该区域内与 CloudFront 分配关联的 ACM 证书将被分发到为该分配配置的所有地理位置。</p>
<p>问：是否可以在区域之间复制证书？</p>
<p>目前不可以。</p>
<p>问：如果同一域名我已拥有来自其他提供商的证书，我是否还能够使用 ACM 配置证书？</p>
<p>是。<br>问：我是否可以在 Amazon EC2 实例或自己的服务器上使用证书？</p>
<p>不可以。目前，ACM 提供的证书只能用于特定 AWS 服务。请参阅我可以将 ACM 提供的证书用于哪些 AWS 服务？</p>
<p>问：我能够通过 ACM 预置的证书数量是否有限制？</p>
<p>默认情况下，您可以在每个区域中为每个账户预置多达 100 个证书。通过 ACM 预置的每个证书最多可以拥有 10 个完全限定域名。您可以访问 AWS Support 中心请求增加上限。有关更多详细信息，请参阅 AWS 文档。</p>
<h3 id="预置证书"><a href="#预置证书" class="headerlink" title="预置证书"></a>预置证书</h3><p>问：如何预置 ACM 提供的证书？</p>
<p>您可以使用 AWS 管理控制台、AWS CLI 或 ACM API/SDK 进行预置。要使用 AWS 管理控制台，请导航到控制台的 ACM 部分，选择“Request a Certificate”，输入站点的域名，然后按照屏幕上的说明完成请求。如果用户可以通过其他名称访问您的站点，则可以在请求中添加其他域名。域的所有者会收到一封关于请求批准颁发证书的电子邮件。在请求中的所有域名获得域所有者的批准后，系统将颁发证书并准备好预置证书以用于其他 AWS 服务，如 Elastic Load Balancing 或 Amazon CloudFront。有关详细信息，请参阅 ACM 文档。<br>问：颁发证书需要多长时间？</p>
<p>获得域的所有者或域所有者授权代表的批准后，系统通常会在几分钟内颁发证书，但也可能需要更长时间。有关更多详细信息，请参阅如何预置 ACM 提供的证书？<br>问：请求证书时会发生什么情况？</p>
<p>为了验证您对请求的证书中包括的域名或名称的控制权，系统会针对证书请求中的每个域名向注册域的所有者发送电子邮件。在域的所有者或授权代表批准证书请求之前，证书请求将处于待验证状态。域的所有者或授权代表 (审批者) 可以按照电子邮件中的说明批准证书请求。说明将指引审批者导航到审批网站，单击电子邮件中的链接或将电子邮件中的链接粘贴到浏览器中，以导航到审批网站。审批者确认与证书请求相关的信息，如域名、证书 ID (ARN) 以及发出请求的 AWS 账户 ID，如果信息准确无误，则批准请求。在证书请求中的所有域名获得批准后，系统通常会在几分钟内颁发证书，届时证书请求的状态将变为已颁发。获得颁发的证书后，您便可以开始将其用于其他 AWS 服务。<br>问：审批请求要发送到哪个电子邮件地址？<br>当您请求证书时，系统会针对证书请求中的每个域名使用 WHOIS 查找来检索该域的联系人信息。电子邮件会发送至针对该域列出的域注册人、管理联系人和技术联系人。电子邮件还会同时发送至域的五个特定电子邮件地址，即在您请求的域名前加上 admin@、administrator@、hostmaster@、webmaster@ 和 postmaster@ 生成的五个地址。例如，如果您为 server.example.com 请求证书，系统将使用针对 example.com 域，外加 admin@server.example.com、administrator@server.example.com、hostmaster@server.example.com、postmaster@server.example.com 和 webmaster@server.example.com 的 WHOIS 查询返回的联系人信息将电子邮件发送至域注册人、技术联系人和管理联系人。</p>
<p>针对以“www”开头的域名或以星号 (*) 开头的通配符名称，这五个特定电子邮件地址采用不同的构造方式。ACM 会删除前导的“www”或星号，而电子邮件则被发送到通过在域名其余部分之前加上 admin@、administrator@、hostmaster@、postmaster@ 和 webmaster@ 来构造的管理员地址。例如，如果您为 www.example.com 请求证书，则电子邮件被发送到 WHOIS 联系人 (如前所述) 以及 admin@example.com，而不是 admin@www.example.com。其余四个特定电子邮件地址也采用类似的方式构造。</p>
<p>请求证书之后，您可以使用 ACM 控制台、AWS CLI 或 API 查看针对各个域发送的电子邮件的收件方电子邮件地址列表。<br>问：我是否可以配置接收证书审批请求的电子邮件地址？</p>
<p>不可以，不过您可以配置用于接收验证电子邮件的基础域名。基础域名必须是证书请求中域名的超级域。例如，如果您想为 server.domain.example.com 请求证书，但希望将审批电子邮件发送至 admin@domain.example.com，则可以使用 AWS API 或 API 实现这一目的。有关更多详细信息，请参阅 ACM CLI 参考和 ACM API 参考。<br>问：我是否可以使用具有代理联系人信息 (例如 Privacy Guard 或 WhoisGuard) 的域？</p>
<p>可以；不过，电子邮件的发送可能会因为代理而延迟。通过代理发送的电子邮件可能会进入您的垃圾邮件文件夹。有关故障排除建议，请参阅 ACM 用户指南。</p>
<p>问：ACM 是否可以通过我的 AWS 账户的技术联系人验证我的身份？</p>
<p>不可以。验证域所有者身份的流程和策略非常严格，并且由为公开可信的证书颁发机构设置策略标准的 CA/Browser Forum 决定。要了解详情，请参阅 Amazon Trust Services 存储库中最新的“Amazon Trust Services 认证规范声明”。<br>问：我的证书请求状态为什么是“待验证”？</p>
<p>已发出请求但未经过批准的证书的状态为待验证。域的所有者或授权代表必须批准证书请求，然后系统才能颁发证书。</p>
<p>问：如果我没有收到验证和批准电子邮件，该怎么做？</p>
<p>有关故障排除建议，请参阅 ACM 用户指南。</p>
<p>问：我的证书请求状态为什么显示为“失败”？</p>
<p>有多种原因会导致域的验证控制流程失败，包括但不限于：网络资源的网址列表中包括的域被认定为包含恶意软件或欺诈性内容。要确定申请失败的原因，请访问 ACM 故障排除指南。</p>
<p>问：我的证书请求状态为什么显示为“验证超时”？</p>
<p>如果 ACM 证书请求在 72 小时内没有接受验证，则被视为超时。有关故障排除建议，请参阅 ACM 用户指南。</p>
<p>问：是否有其他方法来验证域或审批支持的证书？</p>
<p>目前没有。</p>
<h3 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h3><p>问：浏览器、操作系统和移动设备是否信任 ACM 提供的证书？</p>
<p>目前的绝大部分浏览器、操作系统和移动设备都信任 ACM 提供的证书。ACM 提供的证书在浏览器和操作系统中的普及率高达 99%，包括 Windows XP SP3 和 Java 6 及更高版本。</p>
<p>问：如何确认我的浏览器是否信任 ACM 提供的证书？</p>
<p>信任 ACM 提供的证书的浏览器会显示一个锁形图标，并且在连接到使用 ACM 基于 SSL/TLS 提供的证书 (例如使用 HTTPS) 的站点时会显示不要颁发证书的警告。</p>
<p>ACM 提供的证书由亚马逊的证书颁发机构 (CA) 进行验证。任何包含 Amazon Root CA 1、Starfield Services Root Certificate Authority – G2 或 Starfield Class 2 Certification Authority 的浏览器、应用程序和操作系统均会信任由 ACM 提供的证书。</p>
<p>问：ACM 是否可以提供包括多个域名的证书？</p>
<p>可以。每个证书必须包括至少一个域名，并且您可以根据需要在证书中添加更多域名。例如，您可以将域名“www.example.net”添加到用于“www.example.com”的证书，前提是用户通过这两个域名都可以访问您的站点。对于证书请求中包括的所有名称，您必须具有所有权和控制权。</p>
<p>问：什么是通配符域名？</p>
<p>通配符域名匹配域中的所有第一级子域或主机名。第一级子域是一个不包含句号 (圆点) 的域名标签。例如，您可以使用名称“*.example.com”保护 www.example.com、images.example.com 以及以 .example.com 结尾的任何其他主机名或第一级子域。有关更多详细信息，请参阅 ACM 用户指南。</p>
<p>问：ACM 是否可以提供带有通配符域名的证书？</p>
<p>可以。</p>
<p>问：ACM 是否提供组织验证 (OV) 或扩展验证 (EV) 证书？</p>
<p>目前不提供。</p>
<p>问：ACM 是否为网站提供除 SSL/TLS 以外的其他类型的证书？</p>
<p>目前不提供。</p>
<p>问：我是否可以使用 ACM 提供的证书进行代码签名或电子邮件加密？</p>
<p>不可以。</p>
<p>问：ACM 是否提供用于签名和加密电子邮件的证书 (S/MIME 证书) ？</p>
<p>目前不提供。</p>
<p>问：ACM 提供的证书使用哪些算法？</p>
<p>ACM 证书使用的是采用 2048 位模数和 SHA-256 的 RSA 密钥。</p>
<p>问：ACM 是否支持椭圆曲线 (ECDSA) 证书？</p>
<p>目前不支持。<br>问：亚马逊在哪里介绍其关于颁发证书的策略和规范？</p>
<p>“Amazon Trust Services 证书策略”和“Amazon Trust Services 证书规范声明”文档中提供了相关信息。有关最新版本，请参阅 Amazon Trust Services 存储库。</p>
<p>问：如何撤销证书？</p>
<p>您可以访问 AWS Support 中心并创建案例，以请求 ACM 撤销证书。 </p>
<p>问：如果证书中的信息发生更改，我该如何通知 AWS？</p>
<p>您可以发送电子邮件至 validation-questions[at]amazon.com，通知 AWS。</p>
<p> </p>
<h3 id="私有密钥保护"><a href="#私有密钥保护" class="headerlink" title="私有密钥保护"></a>私有密钥保护</h3><p>问：ACM 提供的证书的私有密钥是如何管理的？</p>
<p>系统会为 ACM 提供的每个证书创建一个键前缀。AWS Certificate Manager 可保护并管理用于 SSL/TLS 证书的私有密钥。ACM 会运用强加密和密钥管理最佳实践来保护并存储私有密钥。</p>
<p>问：ACM 是否可以跨 AWS 区域复制证书？</p>
<p>不可以。每个 ACM 证书私有密钥均存储在您请求该证书的区域。例如，当您在弗吉尼亚北部区域获得新的证书后，ACM 会将私有密钥存储在弗吉尼亚北部区域。仅当 ACM 证书与 CloudFront 分配关联时，该证书才能跨区域复制。在这种情况下，CloudFront 会将 ACM 证书分配到为您的分配配置的地理位置。</p>
<p>问：我是否可以对证书私有密钥的使用进行审核？</p>
<p>可以。您可以使用 AWS CloudTrail 查看日志，从而了解证书私有密钥的使用时间。</p>
<h3 id="记账功能"><a href="#记账功能" class="headerlink" title="记账功能"></a>记账功能</h3><p>问：ACM 证书的使用如何收费和计费？</p>
<p>通过 AWS Certificate Manager 预置、管理和部署的 SSL/TLS 证书可免费使用。您只需针对为运行应用程序而创建的 AWS 资源付费，例如 Elastic Load Balancing 负载均衡器或 Amazon CloudFront 分配。</p>
<h3 id="详细信息"><a href="#详细信息" class="headerlink" title="详细信息"></a>详细信息</h3><p>问：我是否可以将同一证书用于多个 Elastic Load Balancing 负载均衡器和多个 CloudFront 分配？</p>
<p>可以。</p>
<p>问：我是否可以将证书用于没有公共 Internet 访问权限的内部 Elastic Load Balancing 负载均衡器？</p>
<p>可以。请参阅托管更新与部署，详细了解 ACM 如何处理无法通过公共 Internet 访问的证书的更新问题。</p>
<p>问：用于 www.example.com 的证书是否也能用于 example.com？</p>
<p>不可以。如果您希望自己的站点能够被两个域名 (www.example.com 和 example.com) 引用，则必须请求包含这两个名称的证书。</p>
<p>问：我是否可以导入第三方证书并将其用于 AWS 服务？</p>
<p>可以。如果想要将第三方证书与 Amazon CloudFront 或 Elastic Load Balancing 配合使用，您可以使用 AWS 管理控制台、AWS CLI 或 AWS Certificate Manager API 将该证书导入 ACM。ACM 不会处理已导入证书的更新流程。您可以使用 AWS 管理控制台监控已导入证书的到期日期，并导入新的第三方证书以便替换即将过期的证书。</p>
<p>问：ACM 提供的证书的有效期是多久？</p>
<p>目前，ACM 提供的证书的有效期为 13 个月。</p>
<p>问：ACM 如何帮助我的企业或组织满足合规性要求？</p>
<p>使用 ACM 可以轻松确保连接的安全性 (这也是 PCI、 FedRAMP 以及 HIPAA 等众多合规性计划的共同要求)，从而帮助您遵守法规要求。有关合规性的具体信息，请参阅 <a href="http://aws.amazon.com/compliance。" target="_blank" rel="external">http://aws.amazon.com/compliance。</a></p>
<p>问：ACM 是否有服务等级协议 (SLA)？</p>
<p>目前没有。</p>
<p>问：ACM 是否允许域名 (也称为国际化域名 (IDN)) 中包含本地语言字符？</p>
<p>ACM 不支持采用 Unicode 编码的本地语言字符；不过，ACM 支持域名使用 ASCII 编码的本地语言字符。</p>
<p>问：ACM 支持哪些域名标签格式？</p>
<p>ACM 仅支持采用 UTF-8 编码的 ASCII 字符，包括包含“xn-”的标签 (通常称为域名的 Punycode)。ACM 不支持域名中使用 Unicode 输入 (Unicode 标签)。</p>
<p>问：ACM 是否会提供一个可以在我的网站上显示的安全站点签章或信任徽标？</p>
<p>不会。如果您想使用站点签章，您可以从第三方供应商处获得。我们建议选择可评估和维护您站点和/或业务实践的安全性的供应商。</p>
<p>问：亚马逊是否允许将其商标或徽标用作证书徽章、站点签章或信任徽标？</p>
<p>不允许。此类签章和徽章可复制到不使用 ACM 服务的站点，但不能假借亚马逊名号建立信任。为保护我们的客户和亚马逊的声誉，我们不允许以这种方式使用我们的徽标。</p>
<h3 id="日志记录"><a href="#日志记录" class="headerlink" title="日志记录"></a>日志记录</h3><p>问：AWS CloudTrail 提供哪些日志记录信息？</p>
<p>您可以确定哪些用户和账户为支持 AWS CloudTrail 的服务调用了 AWS API、发出调用的源 IP 地址以及调用发生的时间。例如，您可以确定哪些用户为关联 ACM 提供的证书与 Elastic Load Balancer 调用了 API，以及 Elastic Load Balancing 服务使用 KMS API 调用加密密钥的时间。</p>
<h3 id="托管更新与部署"><a href="#托管更新与部署" class="headerlink" title="托管更新与部署"></a>托管更新与部署</h3><p>问：什么是 ACM 托管更新与部署？</p>
<p>ACM 托管更新与部署可以管理由 ACM 提供的 SSL/TLS 证书的更新流程并部署更新后的证书。</p>
<p>问：使用 ACM 托管更新与部署有哪些优势？</p>
<p>ACM 可帮助您管理 SSL/TLS 证书的更新和部署。与容易出错的手动流程相比，ACM 能够让安全 Web 服务或应用程序的 SSL/TLS 配置和维护具有更高的操作可靠性。托管更新与部署有助于您避免因证书过期导致的停机。ACM 托管更新与部署不需要您在自己的站点安装或维护软件客户端或代理。ACM 会作为一种服务运行，并且与其他 AWS 服务集成。这意味着，您可以使用 AWS 管理控制台、AWS CLI 或 API 在 AWS 平台上集中管理和部署证书。</p>
<p>问：哪些证书可以自动更新和部署？</p>
<p>ACM 能够更新并部署 ACM 提供的证书，而无需域的所有者进行任何其他审批或介入。如果证书必须经过附加审批才能更新，ACM 会基于证书中的所有域名向相应域的所有者提出审批请求，以此管理更新流程。在证书中的所有域名均获得批准后，ACM 会更新证书并自动将其部署到您的 AWS 资源。如果域的所有者没有批准证书，我们会通知您 (AWS 账户所有者)。为了提高 ACM 自动更新和部署 ACM 提供的证书的能力，请确保证书正在使用，且证书中包括的所有域名均能解析至您的站点，并可通过 Internet 访问。<br>问：ACM 何时更新证书？</p>
<p>ACM 最早可在证书过期前 60 天开始执行更新流程。目前，ACM 提供的证书的验证期限是 13 个月。请参阅 ACM 用户指南，了解有关托管续订的更多信息。</p>
<p>问：在更新证书和部署新证书之前，我是否会收到通知？</p>
<p>不会。ACM 可能会在不提前通知的情况下更新证书或更新密钥，并更换旧的证书。</p>
<p>问：ACM 是否可以更新包含裸域 (也称为顶级域名，例如“example.com”) 的证书？</p>
<p>为了提高 ACM 自动更新和部署包含裸域的证书的能力，请确保裸域的 DNS 查找能够解析至与该证书关联的 AWS 资源。将裸域解析到 AWS 资源可能非常困难，除非您使用 Route 53 或支持别名资源记录 (或同类记录) 的其他 DNS 提供商，从而将裸域映射到 AWS 资源。有关更多信息，请参阅 Route 53 开发人员指南。</p>
<p>问：在 ACM 部署更新后的证书时，我的站点是否会断开现有连接？</p>
<p>不会。在部署新证书之后建立的连接将使用新证书，而现有连接不会受到影响。</p>
]]></content>
      
        <categories>
            
            <category> aws </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Java web project 概览]]></title>
      <url>/java/java-web-project-overview/</url>
      <content type="html"><![CDATA[<ol>
<li><p>Java 基础重点回顾</p>
<ul>
<li>注解</li>
<li>异常</li>
</ul>
</li>
<li><p>J2EE 开发常用版本</p>
<ul>
<li>Jar 引入Tomcat的J2EE的实现</li>
<li>J2EE 1.7</li>
<li>JDK 8</li>
<li>Tomcat 1.7</li>
</ul>
</li>
<li><p>Spring framework</p>
<ul>
<li>Beans</li>
<li>周边生态</li>
<li>项目配置 web.xml</li>
<li>页面渲染<ul>
<li>JSP</li>
<li>Velocity</li>
<li>FreeMaker</li>
<li>themleaf</li>
</ul>
</li>
</ul>
</li>
<li><p>ORM</p>
<ul>
<li>Mybatis<ul>
<li>DAO 接口<ol>
<li>DTO</li>
<li>PO</li>
</ol>
</li>
<li>Domain 或者 Model  实体类和数据库对应</li>
<li>Mapper 使用xml实现和数据库</li>
</ul>
</li>
<li>Hibernate</li>
</ul>
</li>
<li><p>Validation</p>
<ul>
<li>Hibernate Validation 实现</li>
<li>Java EE Validation 实现</li>
</ul>
</li>
<li><p>授权验证/登录</p>
<ol>
<li>intercept 实现</li>
<li>sharon</li>
<li>Spring security</li>
</ol>
</li>
<li><p>部署</p>
<ol>
<li>tomcat 1.7</li>
</ol>
</li>
<li><p>日志</p>
<ol>
<li>log4J</li>
<li>self4J</li>
</ol>
</li>
<li><p>构建工具</p>
<ol>
<li>Maven</li>
<li>Gradle</li>
</ol>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[一个好的项目需要哪些周边生态?]]></title>
      <url>/agile/agile/ecosystem-for-project/</url>
      <content type="html"><![CDATA[<p>一个项目可以做的很完善,也可以做的很简单,这篇文章就是总结了一个清单,来讨论我们在一个敏捷项目中可以做的比较完善的东西,比如CI/CD</p>
<h2 id="质量内建"><a href="#质量内建" class="headerlink" title="质量内建"></a>质量内建</h2><ol>
<li>Check style - 代码风格检查</li>
<li>Test coverage - 测试覆盖率</li>
<li>fortify - Java代码静态分析</li>
<li>TDD - 测试驱动开发</li>
<li>Eslint - 前端代码检查</li>
</ol>
<h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><ol>
<li>Penetration - 渗透测试</li>
</ol>
<h2 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h2><ol>
<li>CI/CD 持续部署</li>
<li>Git Flow - 基于git的团队协作方式</li>
<li>Retro - 敏捷中反思项目的会议</li>
</ol>
<h2 id="监控恢复"><a href="#监控恢复" class="headerlink" title="监控恢复"></a>监控恢复</h2><ol>
<li>monitoring<ul>
<li>Ahportal - 一种监控的实现方式</li>
</ul>
</li>
<li>DR - 灾难恢复方案</li>
</ol>
<h2 id="度量"><a href="#度量" class="headerlink" title="度量"></a>度量</h2><ol>
<li>CPU、内存、磁盘使用率</li>
<li>Max request量</li>
<li>AB 测试</li>
</ol>
<h2 id="环境管理"><a href="#环境管理" class="headerlink" title="环境管理"></a>环境管理</h2><ol>
<li>infrastructure as code - 根据项目代码创建基础设施</li>
<li>immutable infrastructure - 每次部署创建新的服务器</li>
<li>DB migration</li>
</ol>
<h2 id="分布式解耦"><a href="#分布式解耦" class="headerlink" title="分布式解耦"></a>分布式解耦</h2><ol>
<li>micro-service 微服务</li>
<li>SPA Project - 前后端分离</li>
</ol>
<h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><ol>
<li>Blue-Green - 蓝绿部署</li>
<li>Gray - 灰度发布</li>
</ol>
]]></content>
      
        <categories>
            
            <category> agile </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Java object clone]]></title>
      <url>/java/java-object-clone/</url>
      <content type="html"><![CDATA[<p>Java变量赋值对于简单变量来说没有什么特别的,对于对象来说有几种情况,</p>
<ul>
<li>shallow 赋值</li>
<li>深拷贝</li>
<li>克隆</li>
</ul>
<h4 id="shallow-赋值"><a href="#shallow-赋值" class="headerlink" title="shallow 赋值"></a>shallow 赋值</h4><p>这种赋值情况为共享内存空间,多个变量指向同一个地址空间</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Object obj1 = <span class="keyword">new</span> Object();</div><div class="line">Object obj2 = obj1;</div></pre></td></tr></table></figure>
<p>这里的obj1 和 obj2 共享内存空间, 修改其中一个会导致另外一个对象发生变化。</p>
<h4 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h4><p>递归复制对象中所有的成员变量</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Object obj1 = <span class="keyword">new</span> Object();</div><div class="line">obj1.a = <span class="number">1</span>;</div><div class="line"></div><div class="line">Object obj2 = <span class="keyword">new</span> Object();</div><div class="line">obj2.a = obj1.a;</div></pre></td></tr></table></figure>
<h4 id="对象克隆"><a href="#对象克隆" class="headerlink" title="对象克隆"></a>对象克隆</h4><p>使用对象的clone方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Person p = <span class="keyword">new</span> Person(<span class="number">23</span>, <span class="string">"zhang"</span>);</div><div class="line">Person p1 = (Person) p.clone();</div><div class="line"></div><div class="line">System.out.println(p);</div><div class="line">System.out.println(p1);</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[理解 java exception]]></title>
      <url>/java/java-exception/</url>
      <content type="html"><![CDATA[<h4 id="什么是异常和错误"><a href="#什么是异常和错误" class="headerlink" title="什么是异常和错误"></a>什么是异常和错误</h4><p>异常和错误都会阻止当前方法或作用域继续执行,但是异常最大的特点是可以被handle,<br>这是异常和错误最大的区别。</p>
<p>异常(exception)的例子:</p>
<ul>
<li>数据库链接失败</li>
<li>网络中断</li>
</ul>
<p>错误(errors)的例子:</p>
<ul>
<li>内存溢出</li>
<li>CPU超时</li>
</ul>
<p>异常可以被捕获然后进行处理,比如渲染错误页面。错误会导致程序直接退出或崩溃。</p>
<h4 id="Java中的Exception"><a href="#Java中的Exception" class="headerlink" title="Java中的Exception"></a>Java中的Exception</h4><p>Throwable 类是 Java 语言中所有错误或异常的超类（这就是一切皆可抛的东西）。它有两个子类：Error和Exception。</p>
<p>Error：用于指示合理的应用程序不应该试图捕获的严重问题。这种情况是很大的问题，大到你不能处理了，所以听之任之就行了，你不用管它。比如说VirtualMachineError：当 Java 虚拟机崩溃或用尽了它继续操作所需的资源时，抛出该错误。好吧，就算这个异常的存在了，那么应该何时，如何处理它呢？？交给JVM吧，没有比它更专业的了。</p>
<p>Exception：它指出了合理的应用程序想要捕获的条件。Exception又分为两类：一种是CheckedException，一种是UncheckedException。这两种Exception的区别主要是CheckedException需要用try…catch…显示的捕获，而UncheckedException不需要捕获。通常UncheckedException又叫做RuntimeException。《effective java》指出：对于可恢复的条件使用被检查的异常（CheckedException），对于程序错误（言外之意不可恢复，大错已经酿成）使用运行时异常（RuntimeException）。</p>
<p>常见的RuntimeExcepiton有IllegalArgumentException、IllegalStateException、NullPointerException、IndexOutOfBoundsException</p>
<h4 id="异常的捕获"><a href="#异常的捕获" class="headerlink" title="异常的捕获"></a>异常的捕获</h4><p>一个数组越界的例子<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    System.out.println(ints[<span class="number">4</span>]);</div><div class="line">    System.out.println(<span class="string">"是否还能执行"</span>);<span class="comment">// 发生异常以后，后面的代码不能被执行</span></div><div class="line">&#125; <span class="keyword">catch</span> (IndexOutOfBoundsException e) &#123;</div><div class="line">    System.out.println(<span class="string">"数组越界错误"</span>);</div><div class="line">&#125;</div><div class="line">System.out.println(<span class="string">"异常出现后"</span>);</div></pre></td></tr></table></figure></p>
<p><strong>catch 规则: 可以使用多个catch 一旦捕获到的类型同样的或者它的父类就停止捕获。</strong><br>根据这个经验我们都需要把特定的一样类放到前面,最后一个catch用一个基本类型来捕获。</p>
<p>比如 IOException 是FileNotFoundException 的父类,如果FileNotFoundException产生但是产生了其他<br>IOException的异常</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readFile</span><span class="params">()</span> </span>&#123;</div><div class="line">    BufferedReader reader = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(</div><div class="line">                    <span class="keyword">new</span> FileInputStream(<span class="string">"file"</span>)));</div><div class="line">            <span class="comment">// do some other work</span></div><div class="line"></div><div class="line">            <span class="comment">// close reader</span></div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            reader.close();</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="异常链"><a href="#异常链" class="headerlink" title="异常链"></a>异常链</h4><p>丢出新的异常时避免丢失旧的异常,需要把旧的异常放入新的异常链中</p>
<p>c.initCause(e);</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NeverCaught</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> <span class="keyword">throws</span> ExceptionB</span>&#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ExceptionB(<span class="string">"exception b"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> <span class="keyword">throws</span> ExceptionC </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            f();</div><div class="line">        &#125; <span class="keyword">catch</span> (ExceptionB e) &#123;</div><div class="line">            ExceptionC c = <span class="keyword">new</span> ExceptionC(<span class="string">"exception a"</span>);</div><div class="line">            <span class="comment">//异常连</span></div><div class="line">            c.initCause(e);</div><div class="line">            <span class="keyword">throw</span> c;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                g();</div><div class="line">            &#125; <span class="keyword">catch</span> (ExceptionC e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="comment">/*</span></div><div class="line">exception.ExceptionC</div><div class="line">at exception.NeverCaught.g(NeverCaught.java:12)</div><div class="line">at exception.NeverCaught.main(NeverCaught.java:21)</div><div class="line">Caused by: exception.ExceptionB</div><div class="line">at exception.NeverCaught.f(NeverCaught.java:5)</div><div class="line">at exception.NeverCaught.g(NeverCaught.java:10)</div><div class="line">... 1 more</div><div class="line">*/</div></pre></td></tr></table></figure>
<h4 id="运行时异常和检查异常"><a href="#运行时异常和检查异常" class="headerlink" title="运行时异常和检查异常"></a>运行时异常和检查异常</h4><p>检查异常:编译时期比如处理的异常,比如FileNotFoundException,<br>比如使用try catch捕获。</p>
<p>运行时异常:可以不用处理,最终jvm会处理的异常。比如NullPointerException</p>
<h4 id="throw、throws"><a href="#throw、throws" class="headerlink" title="throw、throws"></a>throw、throws</h4><p>throws: 当我们遇到检查异常时,如果不想在方法内处理,可以加上throws关键字,然上一级方法调用者<br>检查,throws会抛出所有检查异常。</p>
<p>throw:在方法内部抛出一个异常。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[How to use this wiki!]]></title>
      <url>/help/how-to-use-this-wiki/</url>
      <content type="html"><![CDATA[<p>Welcome to ! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h4 id="about-hexo"><a href="#about-hexo" class="headerlink" title="about hexo"></a>about hexo</h4><p>本wiki的思路为使用github作为文档、代码的版本管理,使用hexo来生成静态网站。摒弃了博客的写作方式,使用了markdown和wiki的方式,<br>从首页的导航链接直接进入所有的文档,配合搜索框一部了然,用于建立一个知识地图,因此能快速的编写和寻找需要的资料。</p>
<h4 id="更多资料"><a href="#更多资料" class="headerlink" title="更多资料"></a>更多资料</h4><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a><br><a href="https://github.com" target="_blank" rel="external">Github</a></p>
<h4 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h4><h4 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h4><p>创建文章同名目录,然后放置图片或者其他资源即可使用相对路径访问</p>
<p><img src="/help/how-to-use-this-wiki/05a4c81a-8793-4baa-92a1-94b28aece873.jpg" alt=""></p>
<p><a href="hello-world.md">测试连接</a></p>
]]></content>
      
        <categories>
            
            <category> help </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
